<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MACDeer</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://macdfree.github.io/"/>
  <updated>2016-10-07T10:28:57.958Z</updated>
  <id>https://macdfree.github.io/</id>
  
  <author>
    <name>macd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SublimeText插件编写备忘</title>
    <link href="https://macdfree.github.io/2016/10/06/SublimeText%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%E5%A4%87%E5%BF%98/"/>
    <id>https://macdfree.github.io/2016/10/06/SublimeText插件编写备忘/</id>
    <published>2016-10-06T13:43:07.000Z</published>
    <updated>2016-10-07T10:28:57.958Z</updated>
    
    <content type="html"><![CDATA[<p>最近本来想玩一下Atom，奈何插件真不会写（JS功底太差，CoffeeScript不想用），导致最后又重投了Sublime Text的怀抱。Sublime Text的插件两年前就已经写过，只是当时也就网上各种搜，东拼西凑出来个，也没有好好记录一下，所以这次来补上。</p>
<a id="more"></a>
<h1 id="1-如何新建一个插件"><a href="#1-如何新建一个插件" class="headerlink" title="1. 如何新建一个插件"></a>1. 如何新建一个插件</h1><p><code>Tools-&gt;Developer-&gt;New Pluging</code> 可以新建一个默认的插件，代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sublime</div><div class="line"><span class="keyword">import</span> sublime_plugin</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleCommand</span><span class="params">(sublime_plugin.TextCommand)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, edit)</span>:</span></div><div class="line">        self.view.insert(edit, <span class="number">0</span>, <span class="string">"Hello, World!"</span>)</div></pre></td></tr></table></figure></p>
<p>插件文件保存路径类似为 <code>Sublime Text Build 3103 x64\Data\Packages</code>。</p>
<h1 id="2-指令的命名规则"><a href="#2-指令的命名规则" class="headerlink" title="2. 指令的命名规则"></a>2. 指令的命名规则</h1><p>新建并保存好插件后可以使用 Ctrl+` 呼出交互窗口，输入 <code>view.run_command(&#39;example&#39;)</code> 即可插入 <code>Hello, World!</code> 这边要注意指令的命名规则转换，即将驼峰式命名规则转成下划线分割。如：类名是 <code>AaaBbbCommand</code> 则在调用run_command时需要转成 <code>aaa_bbb</code>。</p>
<h1 id="3-TextCommand、WindowCommand和ApplicationCommand"><a href="#3-TextCommand、WindowCommand和ApplicationCommand" class="headerlink" title="3. TextCommand、WindowCommand和ApplicationCommand"></a>3. TextCommand、WindowCommand和ApplicationCommand</h1><p>默认生成的代码中继承了<code>TextCommand</code>，但其实还有<code>WindowCommand</code>和<code>ApplicationCommand</code>这两个基类。对于这三者的关系，我的理解是：<code>TextCommand</code>对应的是<code>sublime.View</code>，<code>WindowCommand</code>对应的是<code>sublime.Window</code>，<code>ApplicationCommand</code>对应的是<code>Sublime Module</code>；然后是一个Sublime程序会有多个Window，一个Window又会有多个View。</p>
<img src="/2016/10/06/SublimeText插件编写备忘/awv.jpg" alt="awv.jpg" title="">
<h1 id="4-run-command常用的内置指令"><a href="#4-run-command常用的内置指令" class="headerlink" title="4. run_command常用的内置指令"></a>4. run_command常用的内置指令</h1><p><code>TextCommand</code>、<code>WindowCommand</code>和<code>ApplicationCommand</code>对于的类都有相应的run_command方法，Sublime Text本身也内置了一些基本的指令，如set_layout、close_window和new_window等。其中set_layout调用时的参数有些复杂，如果要生成一个三列的布局，代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">new_window.run_command(</div><div class="line">           <span class="string">'set_layout'</span>,</div><div class="line">           &#123;</div><div class="line">               <span class="string">"cols"</span>: [<span class="number">0.0</span>, <span class="number">0.33</span>, <span class="number">0.66</span>, <span class="number">1.0</span>], <span class="comment"># 3列等分</span></div><div class="line">               <span class="string">"rows"</span>: [<span class="number">0.0</span>, <span class="number">1.0</span>], <span class="comment"># 一行</span></div><div class="line">               <span class="string">"cells"</span>: [[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>]] <span class="comment"># 这个我也不知道 -_-|||</span></div><div class="line">           &#125;)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近本来想玩一下Atom，奈何插件真不会写（JS功底太差，CoffeeScript不想用），导致最后又重投了Sublime Text的怀抱。Sublime Text的插件两年前就已经写过，只是当时也就网上各种搜，东拼西凑出来个，也没有好好记录一下，所以这次来补上。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="Sublime Text" scheme="https://macdfree.github.io/tags/Sublime-Text/"/>
    
      <category term="Python" scheme="https://macdfree.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 API</title>
    <link href="https://macdfree.github.io/2016/10/02/SublimeText3API/"/>
    <id>https://macdfree.github.io/2016/10/02/SublimeText3API/</id>
    <published>2016-10-02T05:51:54.000Z</published>
    <updated>2016-10-02T15:03:17.592Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html>
<!-- saved from url=(0054)https://macdfree.github.io/2016/09/18/SublimeText3API/ -->
<html class="">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <title>API Reference – Sublime Text 3 Documentation</title>
  <link rel="stylesheet" type="text/css" href="./sublime_docs.css">
  <link rel="stylesheet" type="text/css" href="./css.css">
  <style type="text/css">
  .fancybox-margin {
    margin-right: 0px;
  }
  </style>
</head>

<body data-gclp-initialized="true" data-gistbox-initialized="true">
  <script src="./prism.js"></script>
  <header>
    <section>
      <nav>
        <a href="https://sublimetext.com/" target="_blank" rel="external">Website</a>
        <a href="https://forum.sublimetext.com/" target="_blank" rel="external">Forum</a>
      </nav>
      <div class="index">
        <a href="https://www.sublimetext.com/docs/3/index.html" target="_blank" rel="external"><span>Sublime Text 3</span> Documentation</a></div>
      <h1>API Reference</h1>
    </section>
  </header>
  <section>
    <div class="column">
      <h3>综述</h3>
      <ul>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#example_plugins">插件示例</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#plugin_lifecycle">插件生命周期</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#threading">Threading</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#types">Types</a></li>
      </ul>
    </div>
    <div class="column">
      <h3>核心组件</h3>
      <ul>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime"><code>sublime</code> Module</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View"><code>View</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Selection"><code>Selection</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region"><code>Region</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Phantom"><code>Phantom</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.PhantomSet"><code>PhantomSet</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Edit"><code>Edit</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Window"><code>Window</code> Class</a></li>
        <li><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Settings"><code>Settings</code> Class</a></li>
      </ul>
    </div>
    <div class="column">
      <h3>Plugin Extension Points</h3>
      <ul>
        <li>
          <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin"><code>sublime_plugin</code> Module</a>
        </li>
        <li>
          <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin.EventListener"><code>EventListener</code> Class</a>
        </li>
        <li>
          <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin.ViewEventListener"><code>ViewEventListener</code> Class</a>
        </li>
        <li>
          <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin.ApplicationCommand"><code>ApplicationCommand</code> Class</a>
        </li>
        <li>
          <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin.WindowCommand"><code>WindowCommand</code> Class</a>
        </li>
        <li>
          <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin.TextCommand"><code>TextCommand</code> Class</a>
        </li>
      </ul>
    </div>
  </section>
  <section>
    <h2>综述</h2>
    <h3 id="example_plugins">插件示例</h3>
    <p>Sublime Text预装了几个插件，它们位于
      <tt>Default</tt>package中:
    </p>
    <ul>
      <li>
        <span class="file">Packages/Default/delete_word.py</span>&nbsp;删除光标左边或右边的单词</li>
      <li>
        <span class="file">Packages/Default/duplicate_line.py</span>&nbsp;复制当前行</li>
      <li>
        <span class="file">Packages/Default/exec.py</span> Uses phantoms to display errors inline
      </li>
      <li>
        <span class="file">Packages/Default/font.py</span> Shows how to work with settings
      </li>
      <li>
        <span class="file">Packages/Default/goto_line.py</span> Prompts the user for input, then updates the selection
      </li>
      <li>
        <span class="file">Packages/Default/mark.py</span> Uses
        <tt>add_regions()</tt> to add an icon to the gutter
      </li>
      <li>
        <span class="file">Packages/Default/show_scope_name.py</span> Uses a popup to show the scope names at the caret
      </li>
      <li>
        <span class="file">Packages/Default/trim_trailing_whitespace.py</span> Modifies a buffer just before its saved
      </li>
    </ul>
    <h3 id="plugin_lifecycle">插件生命周期</h3>
    <p>在导入时，插件不能调用任何API函数，除了&nbsp;
      <tt>sublime.version()</tt>,
      <tt>sublime.platform()</tt>,
      <tt>sublime.architecture()</tt>&nbsp;和&nbsp;
      <tt>sublime.channel()</tt>。</p>
    <p>
      If a plugin defines a module level function
      <tt>plugin_loaded()</tt>, this will be called when the API is ready to use. Plugins may also define
      <tt>plugin_unloaded()</tt>, to get notified just before the plugin is unloaded.
    </p>
    <h3 id="threading">Threading</h3>
    <p>
      All API functions are thread-safe, however keep in mind that from the perspective of code running in an alternate thread, application state will be changing while the code is running.
    </p>
    <h3 id="types">Types</h3>
    <p>
      This documentation generally refers to simply Python data types. Some type names are classes documented herein, however there are also a few custom type names that refer to construct with specific semantics:
    </p>
    <ul>
      <li>
        <strong><tt id="type-location">location</tt></strong>: a tuple of
        <tt>(str, str, (int, int))</tt> that contains information about a location of a symbol. 第一个字符串是文件的绝对路径，第二个是文件相对于工程的相对路径，第三个是表示当前的行数和列数。</li>
      <li>
        <strong><tt id="type-point">point</tt></strong>: an
        <tt>int</tt> that represents the offset from the beginning of the editor buffer. The
        <tt>View</tt> methods
        <tt>text_point()</tt> and
        <tt>rowcol()</tt> allow converting to and from this format.
      </li>
      <li>
        <strong><tt id="type-value">value</tt></strong>: any of the Python data types
        <tt>bool</tt>,
        <tt>int</tt>,
        <tt>float</tt>,
        <tt>str</tt>,
        <tt>list</tt> or
        <tt>dict</tt>.
      </li>
      <li>
        <strong><tt id="type-vector">vector</tt></strong>: a tuple of
        <tt>(float, float)</tt> representing
        <tt>x</tt> and
        <tt>y</tt> coordinates.
      </li>
    </ul>
  </section>
  <section>
    <h2 id="sublime">Sublime Module</h2>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">set_timeout(callback, delay)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Runs the
            <tt>callback</tt> in the main thread after the given
            <tt>delay</tt> (in milliseconds).&nbsp;<span style="font-size: 14.4px;">Callbacks with an equal delay will be run in the order they were added.在给定延时后在主线程上执行回调方法。</span><span style="font-size: 0.9em;">如果回调函数的延时时间相同将会按照方法被加载的顺序执行。</span>
            <br>
          </td>
        </tr>
        <tr>
          <td class="mth">set_timeout_async(callback, delay)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Runs the
            <tt>callback</tt> on an alternate thread after the given
            <tt>delay</tt> (in milliseconds).在给定延时后在子线程上执行回调方法</td>
        </tr>
        <tr>
          <td class="mth">error_message(string)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Displays an error dialog to the user.显示一个错误弹窗。</td>
        </tr>
        <tr>
          <td class="mth">message_dialog(string)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Displays a message dialog to the user.显示一个提示框。</td>
        </tr>
        <tr>
          <td class="mth">ok_cancel_dialog(string, &lt;ok_title&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Displays an ok / cancel question dialog to the user. If
            <tt>ok_title</tt> is provided, this may be used as the text on the ok button. Returns
            <tt>True</tt> if the user presses the ok button.
            <br>显示一个确认/取消询问框。使用<span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">ok_title</span><span style="font-size: 14.4px;">可以指定确认按钮的文字。点击确定将返回</span><span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">True</span><span style="font-size: 14.4px;">。</span><span style="font-size: 14.4px;"><br></span></td>
        </tr>
        <tr>
          <td class="mth">yes_no_cancel_dialog(string, &lt;yes_title&gt;, &lt;no_title&gt;)</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Displays a yes / no / cancel question dialog to the user. If
            <tt>yes_title</tt> and/or
            <tt>no_title</tt> are provided, they will be used as the text on the corresponding buttons on some platforms. Returns
            <tt>sublime.DIALOG_YES</tt>,
            <tt>sublime.DIALOG_NO</tt> or
            <tt>sublime.DIALOG_CANCEL</tt>.
            <br>显示一个是/否/取消询问框。<span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">yes_title</span><span style="font-size: 0.9em;">和</span><span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">no_title</span><span style="font-size: 0.9em;">可以指定相应按钮的文字。函数将返回</span>
            <tt>sublime.DIALOG_YES</tt><span style="font-size: 14.4px;">，</span>
            <tt>sublime.DIALOG_NO</tt><span style="font-size: 14.4px;">&nbsp;或&nbsp;</span>
            <tt>sublime.DIALOG_CANCEL</tt><span style="font-size: 14.4px;">.&nbsp;</span><span style="font-size: 0.9em;"><br></span></td>
        </tr>
        <tr>
          <td class="mth">load_resource(name)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Loads the given resource. The
            <tt>name</tt> should be in the format
            <tt>Packages/Default/Main.sublime-menu</tt>.
            <br>加载给定的 资源。</td>
        </tr>
        <tr>
          <td class="mth">load_binary_resource(name)</td>
          <td class="rtn">bytes</td>
          <td class="dsc">
            Loads the given resource. The
            <tt>name</tt> should be in the format
            <tt>Packages/Default/Main.sublime-menu</tt>.
            <br><span style="font-size: 14.4px;">加载给定的 资源。</span>
            <br>
          </td>
        </tr>
        <tr>
          <td class="mth">find_resources(pattern)</td>
          <td class="rtn">[str]</td>
          <td class="dsc">
            Finds resources whose file name matches the given
            <tt>pattern</tt>.
            <br>
          </td>
        </tr>
        <tr>
          <td class="mth">encode_value(value, &lt;pretty&gt;)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Encode a JSON compatible
            <tt>value</tt> into a string representation. If
            <tt>pretty</tt> is set to
            <tt>True</tt>, the string will include newlines and indentation.
            <br>将一个可解析的<span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">value</span><span style="font-size: 0.9em;">解析成JSON字符串，如果</span><span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">pretty</span><span style="font-size: 0.9em;">设置成</span><span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">True</span><span style="font-size: 0.9em;">，返回的字符串将会被格式化。</span><span style="font-size: 0.9em;"><br></span></td>
        </tr>
        <tr>
          <td class="mth">decode_value(string)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-value">value</a></td>
          <td class="dsc">
            Decodes a JSON string into an object. If the
            <tt>string</tt> is invalid, a
            <tt>ValueError</tt> will be thrown.
            <br>将JSON字符串解码成对象。如果<span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">string</span><span style="font-size: 0.9em;">非法，则抛出</span><span style="color: rgb(0, 0, 0); font-family: Menlo, Consolas, &quot;Ubuntu Mono&quot;, monospace; font-size: 14px; background-color: rgb(243, 243, 243);">ValueError</span><span style="font-size: 0.9em;">异常。</span><span style="font-size: 0.9em;"><br></span></td>
        </tr>
        <tr>
          <td class="mth">expand_variables(value, variables)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-value">value</a></td>
          <td class="dsc">
            Expands any variables in the string
            <tt>value</tt> using the variables defined in the dictionary
            <tt>variables</tt>.
            <tt>value</tt> may also be a
            <tt>list</tt> or
            <tt>dict</tt>, in which case the structure will be recursively expanded. Strings should use snippet syntax, for example: <code class="  language-python">expand_variables<span class="token punctuation">(</span><span class="token string">"Hello, ${name}"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"Foo"</span><span class="token punctuation">}</span><span class="token punctuation">)<br></span></code><span style="font-size: 14.4px;">&nbsp;</span>
            <br>
          </td>
        </tr>
        <tr>
          <td class="mth">load_settings(base_name)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Settings">Settings</a></td>
          <td class="dsc">
            Loads the named settings. The name should include a file name and extension, but not a path. The packages will be searched for files matching the
            <tt>base_name</tt>, and the results will be collated into the settings object. Subsequent calls to
            <tt>load_settings()</tt> with the
            <tt>base_name</tt> will return the same object, and not load the settings from disk again.
          </td>
        </tr>
        <tr>
          <td class="mth">save_settings(base_name)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Flushes any in-memory changes to the named settings object to disk.
          </td>
        </tr>
        <tr>
          <td class="mth">windows()</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Window">Window</a>]</td>
          <td class="dsc">
            Returns a list of all the open windows.
          </td>
        </tr>
        <tr>
          <td class="mth">active_window()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Window">Window</a></td>
          <td class="dsc">
            Returns the most recently used window.
          </td>
        </tr>
        <tr>
          <td class="mth">packages_path()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the path where all the user's loose packages are located.
          </td>
        </tr>
        <tr>
          <td class="mth">installed_packages_path()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the path where all the user's <span class="file">.sublime-package</span> files are located.
          </td>
        </tr>
        <tr>
          <td class="mth">cache_path()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the path where Sublime Text stores cache files.
          </td>
        </tr>
        <tr>
          <td class="mth">get_clipboard(&lt;size_limit&gt;)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the contents of the clipboard.
            <tt>size_limit</tt> is there to protect against unnecessarily large data, defaults to 16,777,216 characters
          </td>
        </tr>
        <tr>
          <td class="mth">set_clipboard(string)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the contents of the clipboard.
          </td>
        </tr>
        <tr>
          <td class="mth">score_selector(scope, selector)</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Matches the
            <tt>selector</tt> against the given
            <tt>scope</tt>, returning a score. A score of
            <tt>0</tt> means no match, above
            <tt>0</tt> means a match. Different selectors may be compared against the same scope: a higher score means the selector is a better match for the scope.
          </td>
        </tr>
        <tr>
          <td class="mth">run_command(string, &lt;args&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Runs the named <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime_plugin.ApplicationCommand">ApplicationCommand</a> with the (optional) given
            <tt>args</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">log_commands(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls command logging. If enabled, all commands run from key bindings and the menu will be logged to the console.
          </td>
        </tr>
        <tr>
          <td class="mth">log_input(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls input logging. If enabled, all key presses will be logged to the console.
          </td>
        </tr>
        <tr>
          <td class="mth">log_result_regex(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls result regex logging. This is useful for debugging regular expressions used in build systems.
          </td>
        </tr>
        <tr>
          <td class="mth">version()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the version number
          </td>
        </tr>
        <tr>
          <td class="mth">platform()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the platform, which may be
            <tt>"osx"</tt>,
            <tt>"linux"</tt> or
            <tt>"windows"</tt>
          </td>
        </tr>
        <tr>
          <td class="mth">arch()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the CPU architecture, which may be
            <tt>"x32"</tt> or
            <tt>"x64"</tt>
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.View"><code>sublime.View</code> Class</h2>
    <p>
      Represents a view into a text buffer. Note that multiple views may refer to the same buffer, but they have their own unique selection and geometry.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">id()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns a number that uniquely identifies this view.
          </td>
        </tr>
        <tr>
          <td class="mth">buffer_id()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns a number that uniquely identifies the buffer underlying this view.
          </td>
        </tr>
        <tr>
          <td class="mth">is_primary()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            If the view is the primary view into a file. Will only be
            <tt>False</tt> if the user has opened multiple views into a file.
          </td>
        </tr>
        <tr>
          <td class="mth">file_name()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            The full name file the file associated with the buffer, or
            <tt>None</tt> if it doesn't exist on disk.
          </td>
        </tr>
        <tr>
          <td class="mth">name()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            The name assigned to the buffer, if any
          </td>
        </tr>
        <tr>
          <td class="mth">set_name(name)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Assigns a name to the buffer
          </td>
        </tr>
        <tr>
          <td class="mth">is_loading()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the buffer is still loading from disk, and not ready for use.
          </td>
        </tr>
        <tr>
          <td class="mth">is_dirty()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if there are any unsaved modifications to the buffer.
          </td>
        </tr>
        <tr>
          <td class="mth">is_read_only()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the buffer may not be modified.
          </td>
        </tr>
        <tr>
          <td class="mth">set_read_only(value)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the read only property on the buffer.
          </td>
        </tr>
        <tr>
          <td class="mth">is_scratch()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the buffer is a scratch buffer. Scratch buffers never report as being dirty.
          </td>
        </tr>
        <tr>
          <td class="mth">set_scratch(value)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the scratch property on the buffer.
          </td>
        </tr>
        <tr>
          <td class="mth">settings()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Settings">Settings</a></td>
          <td class="dsc">
            Returns a reference to the view's settings object. Any changes to this settings object will be private to this view.
          </td>
        </tr>
        <tr>
          <td class="mth">window()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Window">Window</a></td>
          <td class="dsc">
            Returns a reference to the window containing the view.
          </td>
        </tr>
        <tr>
          <td class="mth">run_command(string, &lt;args&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Runs the named <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.TextCommand">TextCommand</a> with the (optional) given
            <tt>args</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">size()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the number of character in the file.
          </td>
        </tr>
        <tr>
          <td class="mth">substr(region)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the contents of the
            <tt>region</tt> as a string.
          </td>
        </tr>
        <tr>
          <td class="mth">substr(point)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the character to the right of the
            <tt>point</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">insert(edit, point, string)</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Inserts the given
            <tt>string</tt> in the buffer at the specified
            <tt>point</tt>. Returns the number of characters inserted: this may be different if tabs are being translated into spaces in the current buffer.
          </td>
        </tr>
        <tr>
          <td class="mth">erase(edit, region)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Erases the contents of the
            <tt>region</tt> from the buffer.
          </td>
        </tr>
        <tr>
          <td class="mth">replace(edit, region, string)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Replaces the contents of the
            <tt>region</tt> with the given
            <tt>string</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">sel()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Selection">Selection</a></td>
          <td class="dsc">
            Returns a reference to the selection.
          </td>
        </tr>
        <tr>
          <td class="mth">line(point)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns the line that contains the
            <tt>point</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">line(region)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns a modified copy of
            <tt>region</tt> such that it starts at the beginning of a line, and ends at the end of a line. Note that it may span several lines.
          </td>
        </tr>
        <tr>
          <td class="mth">full_line(point)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            As
            <tt>line()</tt>, but the region includes the trailing newline character, if any.
          </td>
        </tr>
        <tr>
          <td class="mth">full_line(region)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            As
            <tt>line()</tt>, but the region includes the trailing newline character, if any.
          </td>
        </tr>
        <tr>
          <td class="mth">lines(region)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Returns a list of lines (in sorted order) intersecting the
            <tt>region</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">split_by_newlines(region)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Splits the
            <tt>region</tt> up such that each region returned exists on exactly one line.
          </td>
        </tr>
        <tr>
          <td class="mth">word(point)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns the word that contains the
            <tt>point</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">word(region)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns a modified copy of
            <tt>region</tt> such that it starts at the beginning of a word, and ends at the end of a word. Note that it may span several words.
          </td>
        </tr>
        <tr>
          <td class="mth">classify(point)</td>
          <td class="rtn">int</td>
          <td class="dsc">
            <p>
              Classifies
              <tt>point</tt>, returning a bitwise OR of zero or more of these flags:
            </p>
            <ul>
              <li>
                <tt>sublime.CLASS_WORD_START</tt>
              </li>
              <li>
                <tt>sublime.CLASS_WORD_END</tt>
              </li>
              <li>
                <tt>sublime.CLASS_PUNCTUATION_START</tt>
              </li>
              <li>
                <tt>sublime.CLASS_PUNCTUATION_END</tt>
              </li>
              <li>
                <tt>sublime.CLASS_SUB_WORD_START</tt>
              </li>
              <li>
                <tt>sublime.CLASS_SUB_WORD_END</tt>
              </li>
              <li>
                <tt>sublime.CLASS_LINE_START</tt>
              </li>
              <li>
                <tt>sublime.CLASS_LINE_END</tt>
              </li>
              <li>
                <tt>sublime.CLASS_EMPTY_LINE</tt>
              </li>
            </ul>
          </td>
        </tr>
        <tr>
          <td class="mth">find_by_class(point, forward, classes, &lt;separators&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Finds the next location after
            <tt>point</tt> that matches the given
            <tt>classes</tt>. If
            <tt>forward</tt> is
            <tt>False</tt>, searches backwards instead of forwards.
            <tt>classes</tt> is a bitwise OR of the
            <tt>sublime.CLASS_XXX</tt> flags.
            <tt>separators</tt> may be passed in, to define what characters should be considered to separate words.
          </td>
        </tr>
        <tr>
          <td class="mth">expand_by_class(point, classes, &lt;separators&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Expands
            <tt>point</tt> to the left and right, until each side lands on a location that matches
            <tt>classes</tt>.
            <tt>classes</tt> is a bitwise OR of the
            <tt>sublime.CLASS_XXX</tt> flags. separators may be passed in, to define what characters should be considered to separate words.
          </td>
        </tr>
        <tr>
          <td class="mth">expand_by_class(region, classes, &lt;separators&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Expands
            <tt>region</tt> to the left and right, until each side lands on a location that matches
            <tt>classes</tt>.
            <tt>classes</tt> is a bitwise OR of the
            <tt>sublime.CLASS_XXX</tt> flags.
            <tt>separators</tt> may be passed in, to define what characters should be considered to separate words.
          </td>
        </tr>
        <tr>
          <td class="mth">find(pattern, start_point, &lt;flags&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns the first region matching the regex
            <tt>pattern</tt>, starting from
            <tt>start_point</tt>, or
            <tt>None</tt> if it can't be found. The optional
            <tt>flags</tt> parameter may be
            <tt>sublime.LITERAL</tt>,
            <tt>sublime.IGNORECASE</tt>, or the two ORed together.
          </td>
        </tr>
        <tr>
          <td class="mth">find_all(pattern, &lt;flags&gt;, &lt;format&gt;, &lt;extractions&gt;)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Returns all (non-overlapping) regions matching the regex
            <tt>pattern</tt>. The optional
            <tt>flags</tt> parameter may be
            <tt>sublime.LITERAL</tt>,
            <tt>sublime.IGNORECASE</tt>, or the two ORed together. If a
            <tt>format</tt> string is given, then all matches will be formatted with the formatted string and placed into the extractions list.
          </td>
        </tr>
        <tr>
          <td class="mth">rowcol(point)</td>
          <td class="rtn">(int, int)</td>
          <td class="dsc">
            Calculates the 0-based line and column numbers of the
            <tt>point</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">text_point(row, col)</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Calculates the character offset of the given, 0-based,
            <tt>row</tt> and
            <tt>col</tt>. Note that
            <tt>col</tt> is interpreted as the number of characters to advance past the beginning of the row.
          </td>
        </tr>
        <tr>
          <td class="mth">set_syntax_file(syntax_file)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Changes the syntax used by the view.
            <tt>syntax_file</tt> should be a name along the lines of
            <tt>Packages/Python/Python.tmLanguage</tt>. To retrieve the current syntax, use <code class="  language-python">view<span class="token punctuation">.</span>settings<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'syntax'</span><span class="token punctuation">)</span></code>.
          </td>
        </tr>
        <tr>
          <td class="mth">extract_scope(point)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns the extent of the syntax scope name assigned to the character at the given
            <tt>point</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">scope_name(point)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the syntax scope name assigned to the character at the given
            <tt>point</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">match_selector(point, selector)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Checks the
            <tt>selector</tt> against the scope at the given
            <tt>point</tt>, returning a bool if they match.
          </td>
        </tr>
        <tr>
          <td class="mth">score_selector(point, selector)</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Matches the
            <tt>selector</tt> against the scope at the given
            <tt>point</tt>, returning a score. A score of
            <tt>0</tt> means no match, above
            <tt>0</tt> means a match. Different selectors may be compared against the same scope: a higher score means the selector is a better match for the scope.
          </td>
        </tr>
        <tr>
          <td class="mth">find_by_selector(selector)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Finds all regions in the file matching the given
            <tt>selector</tt>, returning them as a list.
          </td>
        </tr>
        <tr>
          <td class="mth">show(location, &lt;show_surrounds&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Scroll the view to show the given
            <tt>location</tt>, which may be a <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-point">point</a>, <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a> or <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Selection">Selection</a>.
          </td>
        </tr>
        <tr>
          <td class="mth">show_at_center(location)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Scroll the view to center on the
            <tt>location</tt>, which may be a <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-point">point</a> or <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>.
          </td>
        </tr>
        <tr>
          <td class="mth">visible_region()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns the currently visible area of the view.
          </td>
        </tr>
        <tr>
          <td class="mth">viewport_position()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-vector">vector</a></td>
          <td class="dsc">
            Returns the offset of the viewport in layout coordinates.
          </td>
        </tr>
        <tr>
          <td class="mth">set_viewport_position(vector, &lt;animate&lt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Scrolls the viewport to the given layout position.
          </td>
        </tr>
        <tr>
          <td class="mth">viewport_extent()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-vector">vector</a></td>
          <td class="dsc">
            Returns the width and height of the viewport.
          </td>
        </tr>
        <tr>
          <td class="mth">layout_extent()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-vector">vector</a></td>
          <td class="dsc">
            Returns the width and height of the layout.
          </td>
        </tr>
        <tr>
          <td class="mth">text_to_layout(point)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-vector">vector</a></td>
          <td class="dsc">
            Converts a text position to a layout position
          </td>
        </tr>
        <tr>
          <td class="mth">layout_to_text(vector)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-point">point</a></td>
          <td class="dsc">
            Converts a layout position to a text position
          </td>
        </tr>
        <tr>
          <td class="mth">window_to_layout(vector)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-vector">vector</a></td>
          <td class="dsc">
            Converts a window position to a layout position
          </td>
        </tr>
        <tr>
          <td class="mth">window_to_text(vector)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-point">point</a></td>
          <td class="dsc">
            Converts a window position to a text position
          </td>
        </tr>
        <tr>
          <td class="mth">line_height()</td>
          <td class="rtn">float</td>
          <td class="dsc">
            Returns the light height used in the layout
          </td>
        </tr>
        <tr>
          <td class="mth">em_width()</td>
          <td class="rtn">float</td>
          <td class="dsc">
            Returns the typical character width used in the layout
          </td>
        </tr>
        <tr>
          <td class="mth">add_regions(key, [regions], &lt;scope&gt;, &lt;icon&gt;, &lt;flags&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              Add a set of
              <tt>regions</tt> to the view. If a set of
              <tt>regions</tt> already exists with the given
              <tt>key</tt>, they will be overwritten. The
              <tt>scope</tt> is used to source a color to draw the
              <tt>regions</tt> in, it should be the name of a scope, such as
              <tt>"comment"</tt> or
              <tt>"string"</tt>. If the
              <tt>scope</tt> is empty, the
              <tt>regions</tt> won't be drawn.
            </p>
            <p>
              The optional
              <tt>icon</tt> name, if given, will draw the named icons in the gutter next to each region. The
              <tt>icon</tt> will be tinted using the color associated with the scope. Valid icon names are
              <tt>dot</tt>,
              <tt>circle</tt>,
              <tt>bookmark</tt> and
              <tt>cross</tt>. The icon name may also be a full package relative path, such as
              <tt>Packages/Theme - Default/dot.png</tt>.
            </p>
            <p>
              The optional
              <tt>flags</tt> parameter is a bitwise combination of:
            </p>
            <ul>
              <li>
                <tt>sublime.DRAW_EMPTY</tt>: Draw empty regions with a vertical bar. By default, they aren't drawn at all.
              </li>
              <li>
                <tt>sublime.HIDE_ON_MINIMAP</tt>: Don't show the regions on the minimap.
              </li>
              <li>
                <tt>sublime.DRAW_EMPTY_AS_OVERWRITE</tt>: Draw empty regions with a horizontal bar instead of a vertical one.
              </li>
              <li>
                <tt>sublime.DRAW_NO_FILL</tt>: Disable filling the regions, leaving only the outline.
              </li>
              <li>
                <tt>sublime.DRAW_NO_OUTLINE</tt>: Disable drawing the outline of the regions.
              </li>
              <li>
                <tt>sublime.DRAW_SOLID_UNDERLINE</tt>: Draw a solid underline below the regions.
              </li>
              <li>
                <tt>sublime.DRAW_STIPPLED_UNDERLINE</tt>: Draw a stippled underline below the regions.
              </li>
              <li>
                <tt>sublime.DRAW_SQUIGGLY_UNDERLINE</tt>: Draw a squiggly underline below the regions.
              </li>
              <li>
                <tt>sublime.PERSISTENT</tt>: Save the regions in the session.
              </li>
              <li>
                <tt>sublime.HIDDEN</tt>: Don't draw the regions.
              </li>
            </ul>
            <p>
              The underline styles are exclusive, either zero or one of them should be given. If using an underline,
              <tt>sublime.DRAW_NO_FILL</tt> and
              <tt>sublime.DRAW_NO_OUTLINE</tt> should generally be passed in.
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">get_regions(key)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Return the regions associated with the given
            <tt>key</tt>, if any
          </td>
        </tr>
        <tr>
          <td class="mth">erase_regions(key)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Removed the named regions
          </td>
        </tr>
        <tr>
          <td class="mth">set_status(key, value)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Adds the status
            <tt>key</tt> to the view. The
            <tt>value</tt> will be displayed in the status bar, in a comma separated list of all status values, ordered by key. Setting the
            <tt>value</tt> to the empty string will clear the status.
          </td>
        </tr>
        <tr>
          <td class="mth">get_status(key)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the previously assigned value associated with the
            <tt>key</tt>, if any.
          </td>
        </tr>
        <tr>
          <td class="mth">erase_status(key)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Clears the named status.
          </td>
        </tr>
        <tr>
          <td class="mth">command_history(index, &lt;modifying_only&gt;)</td>
          <td class="rtn">(str, dict, int)</td>
          <td class="dsc">
            <p>
              Returns the command name, command arguments, and repeat count for the given history entry, as stored in the undo / redo stack.
            </p>
            <p>
              Index
              <tt>0</tt> corresponds to the most recent command,
              <tt>-1</tt> the command before that, and so on. Positive values for index indicate to look in the redo stack for commands. If the undo / redo history doesn't extend far enough, then
              <tt>(None, None, 0)</tt> will be returned.
            </p>
            <p>
              Setting
              <tt>modifying_only</tt> to
              <tt>True</tt> (the default is
              <tt>False</tt>) will only return entries that modified the buffer.
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">change_count()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the current change count. Each time the buffer is modified, the change count is incremented. The change count can be used to determine if the buffer has changed since the last it was inspected.
          </td>
        </tr>
        <tr>
          <td class="mth">fold([regions])</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Folds the given
            <tt>regions</tt>, returning
            <tt>False</tt> if they were already folded
          </td>
        </tr>
        <tr>
          <td class="mth">fold(region)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Folds the given
            <tt>region</tt>, returning
            <tt>False</tt> if it was already folded
          </td>
        </tr>
        <tr>
          <td class="mth">unfold(region)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Unfolds all text in the
            <tt>region</tt>, returning the unfolded regions
          </td>
        </tr>
        <tr>
          <td class="mth">unfold([regions])</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>]</td>
          <td class="dsc">
            Unfolds all text in the
            <tt>regions</tt>, returning the unfolded regions
          </td>
        </tr>
        <tr>
          <td class="mth">encoding()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the encoding currently associated with the file
          </td>
        </tr>
        <tr>
          <td class="mth">set_encoding(encoding)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Applies a new encoding to the file. This encoding will be used the next time the file is saved.
          </td>
        </tr>
        <tr>
          <td class="mth">line_endings()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns the line endings used by the current file.
          </td>
        </tr>
        <tr>
          <td class="mth">set_line_endings(line_endings)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the line endings that will be applied when next saving.
          </td>
        </tr>
        <tr>
          <td class="mth">overwrite_status()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns the overwrite status, which the user normally toggles via the insert key.
          </td>
        </tr>
        <tr>
          <td class="mth">set_overwrite_status(enabled)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the overwrite status.
          </td>
        </tr>
        <tr>
          <td class="mth">symbols()</td>
          <td class="rtn">[(<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a>, str)]</td>
          <td class="dsc">
            Extract all the symbols defined in the buffer.
          </td>
        </tr>
        <tr>
          <td class="mth">show_popup_menu(items, on_done, &lt;flags&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              Shows a pop up menu at the caret, to select an item in a list.
              <tt>on_done</tt> will be called once, with the index of the selected item. If the pop up menu was cancelled,
              <tt>on_done</tt> will be called with an argument of
              <tt>-1</tt>.
            </p>
            <p>
              <tt>items</tt> is a list of strings.
            </p>
            <p>
              <tt>flags</tt> it currently unused.
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">show_popup(content, &lt;flags&gt;, &lt;location&gt;, &lt;max_width&gt;, &lt;max_height&gt;, &lt;on_navigate&gt;, &lt;on_hide&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              Shows a popup displaying HTML content.
            </p>
            <p>
              <tt>flags</tt> is a bitwise combination of the following:
            </p>
            <ul>
              <li>
                <tt>sublime.COOPERATE_WITH_AUTO_COMPLETE</tt>. Causes the popup to display next to the auto complete menu
              </li>
              <li>
                <tt>sublime.HIDE_ON_MOUSE_MOVE</tt>. Causes the popup to hide when the mouse is moved, clicked or scrolled
              </li>
              <li>
                <tt>sublime.HIDE_ON_MOUSE_MOVE_AWAY</tt>. Causes the popup to hide when the mouse is moved (unless towards the popup), or when clicked or scrolled
              </li>
            </ul>
            <p>
              The default
              <tt>location</tt> of
              <tt>-1</tt> will display the popup at the cursor, otherwise a text point should be passed.
            </p>
            <p>
              <tt>max_width</tt> and
              <tt>max_height</tt> set the maximum dimensions for the popup, after which scroll bars will be displayed.
            </p>
            <p>
              <tt>on_navigate</tt> is a callback that should accept a string contents of the
              <tt>href</tt> attribute on the link the user clicked.
            </p>
            <p>
              <tt>on_hide</tt> is called when the popup is hidden.
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">update_popup(content)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Updates the contents of the currently visible popup.
          </td>
        </tr>
        <tr>
          <td class="mth">is_popup_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns if the popup is currently shown.
          </td>
        </tr>
        <tr>
          <td class="mth">hide_popup()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Hides the popup.
          </td>
        </tr>
        <tr>
          <td class="mth">is_auto_complete_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns if the auto complete menu is currently visible.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.Selection"><code>sublime.Selection</code> Class</h2>
    <p>
      Maintains a set of Regions, ensuring that none overlap. The regions are kept in sorted order.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">clear()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Removes all regions.
          </td>
        </tr>
        <tr>
          <td class="mth">add(region)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Adds the given
            <tt>region</tt>. It will be merged with any intersecting regions already contained within the set.
          </td>
        </tr>
        <tr>
          <td class="mth">add_all(regions)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Adds all regions in the given
            <tt>list</tt> or
            <tt>tuple</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">subtract(region)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Subtracts the
            <tt>region</tt> from all regions in the set.
          </td>
        </tr>
        <tr>
          <td class="mth">contains(region)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> iff the given
            <tt>region</tt> is a subset.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.Region"><code>sublime.Region</code> Class</h2>
    <p>
      Represents an area of the buffer. Empty regions, where a == b are valid.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Constructors</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">Region(a, b)</td>
          <td class="dsc">
            Creates a Region with initial values a and b.
          </td>
        </tr>
      </tbody>
    </table>
    <table class="functions">
      <tbody>
        <tr>
          <th>Properties</th>
          <th>Type</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">a</td>
          <td class="rtn">int</td>
          <td class="dsc">
            The first end of the region.
          </td>
        </tr>
        <tr>
          <td class="mth">b</td>
          <td class="rtn">int</td>
          <td class="dsc">
            The second end of the region. May be less that a, in which case the region is a reversed one.
          </td>
        </tr>
        <tr>
          <td class="mth">xpos</td>
          <td class="rtn">int</td>
          <td class="dsc">
            The target horizontal position of the region, or
            <tt>-1</tt> if undefined. Effects behavior when pressing the up or down keys.
          </td>
        </tr>
      </tbody>
    </table>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">begin()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the minimum of a and b.
          </td>
        </tr>
        <tr>
          <td class="mth">end()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the maximum of a and b.
          </td>
        </tr>
        <tr>
          <td class="mth">size()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the number of characters spanned by the region. Always &gt;= 0.
          </td>
        </tr>
        <tr>
          <td class="mth">empty()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> iff
            <tt>begin()</tt> ==
            <tt>end()</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">cover(region)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns a Region spanning both this and the given regions.
          </td>
        </tr>
        <tr>
          <td class="mth">intersection(region)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Region">Region</a></td>
          <td class="dsc">
            Returns the set intersection of the two regions.
          </td>
        </tr>
        <tr>
          <td class="mth">intersects(region)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> iff self ==
            <tt>region</tt> or both include one or more positions in common.
          </td>
        </tr>
        <tr>
          <td class="mth">contains(region)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> iff the given
            <tt>region</tt> is a subset.
          </td>
        </tr>
        <tr>
          <td class="mth">contains(point)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> iff
            <tt>begin()</tt> &lt;=
            <tt>point</tt> &lt;=
            <tt>end()</tt>.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.Phantom"><code>sublime.Phantom</code> Class</h2>
    <p>
      Represents an HTML-based decoration to display non-editable content interspersed in a View. Used with PhantomSet to actually add the phantoms to the View. Once a Phantom has been constructed and added to the View, changes to the attributes will have no effect.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Constructors</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">Phantom(region, content, layout, &lt;on_navigate&gt;)</td>
          <td class="dsc">
            <p>
              Creates a phantom attached to a
              <tt>region</tt>. The
              <tt>content</tt> is HTML to be processed by <a href="https://www.sublimetext.com/docs/3/minihtml.html" target="_blank" rel="external">minihtml</a>.
            </p>
            <p>
              <tt>layout</tt> must be one of:
            </p>
            <ul>
              <li>
                <tt>sublime.LAYOUT_INLINE</tt>: Display the phantom in between the
                <tt>region</tt> and the point following.
              </li>
              <li>
                <tt>sublime.LAYOUT_BELOW</tt>: Display the phantom in space below the current line, left-aligned with the
                <tt>region</tt>.
              </li>
              <li>
                <tt>sublime.LAYOUT_BLOCK</tt>: Display the phantom in space below the current line, left-aligned with the beginning of the line.
              </li>
            </ul>
            <p>
              <tt>on_navigate</tt> is an optional callback that should accept a single string parameter, that is the
              <tt>href</tt> attribute of the link clicked.
            </p>
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.PhantomSet"><code>sublime.PhantomSet</code> Class</h2>
    <p>
      A collection that manages Phantoms and the process of adding them, updating them and removing them from the View.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Constructors</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">PhantomSet(view, &lt;key&gt;)</td>
          <td class="dsc">
            Creates a PhantomSet attached to a
            <tt>view</tt>.
            <tt>key</tt> is a string to group Phantoms together.
          </td>
        </tr>
      </tbody>
    </table>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">update(phantoms)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              <tt>phantoms</tt> should be a list of phantoms.
            </p>
            <p>
              The
              <tt>.region</tt> attribute of each existing phantom in the set will be updated. New phantoms will be added to the view and phantoms not in
              <tt>phantoms</tt> list will be deleted.
            </p>
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.Edit"><code>sublime.Edit</code> Class</h2>
    <p>
      Edit objects have no functions, they exist to group buffer modifications.
    </p>
    <p>
      Edit objects are passed to <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.TextCommand">TextCommand</a>s, and can not be created by the user. Using an invalid Edit object, or an Edit object from a different View, will cause the functions that require them to fail.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">(no methods)</td>
          <td class="rtn"></td>
          <td class="dsc"></td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.Window"><code>sublime.Window</code> Class</h2>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">id()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns a number that uniquely identifies this window.
          </td>
        </tr>
        <tr>
          <td class="mth">new_file()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            Creates a new file. The returned view will be empty, and its
            <tt>is_loaded()</tt> method will return
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">open_file(file_name, &lt;flags&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            <p>
              Opens the named file, and returns the corresponding view. If the file is already opened, it will be brought to the front. Note that as file loading is asynchronous, operations on the returned view won't be possible until its
              <tt>is_loading()</tt> method returns
              <tt>False</tt>.
            </p>
            <p>
              The optional
              <tt>flags</tt> parameter is a bitwise combination of:
            </p>
            <ul>
              <li>
                <tt>sublime.ENCODED_POSITION</tt>: Indicates the file_name should be searched for a
                <tt>:row</tt> or
                <tt>:row:col</tt> suffix
              </li>
              <li>
                <tt>sublime.TRANSIENT</tt>: Open the file as a preview only: it won't have a tab assigned it until modified
              </li>
            </ul>
          </td>
        </tr>
        <tr>
          <td class="mth">find_open_file(file_name)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            Finds the named file in the list of open files, and returns the corresponding View, or
            <tt>None</tt> if no such file is open.
          </td>
        </tr>
        <tr>
          <td class="mth">active_view()</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            Returns the currently edited view.
          </td>
        </tr>
        <tr>
          <td class="mth">active_view_in_group(group)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            Returns the currently edited view in the given
            <tt>group</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">views()</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a>]</td>
          <td class="dsc">
            Returns all open views in the window.
          </td>
        </tr>
        <tr>
          <td class="mth">views_in_group(group)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a>]</td>
          <td class="dsc">
            Returns all open views in the given
            <tt>group</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">num_groups()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the number of view groups in the window.
          </td>
        </tr>
        <tr>
          <td class="mth">active_group()</td>
          <td class="rtn">int</td>
          <td class="dsc">
            Returns the index of the currently selected group.
          </td>
        </tr>
        <tr>
          <td class="mth">focus_group(group)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Makes the given
            <tt>group</tt> active.
          </td>
        </tr>
        <tr>
          <td class="mth">focus_view(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Switches to the given
            <tt>view</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">get_view_index(view)</td>
          <td class="rtn">(int, int)</td>
          <td class="dsc">
            Returns the group, and index within the group of the
            <tt>view</tt>. Returns
            <tt>-1</tt> if not found.
          </td>
        </tr>
        <tr>
          <td class="mth">set_view_index(view, group, index)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Moves the
            <tt>view</tt> to the given
            <tt>group</tt> and
            <tt>index</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">status_message(string)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Show a message in the status bar.
          </td>
        </tr>
        <tr>
          <td class="mth">is_menu_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the menu is visible.
          </td>
        </tr>
        <tr>
          <td class="mth">set_menu_visible(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls if the menu is visible.
          </td>
        </tr>
        <tr>
          <td class="mth">is_sidebar_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the sidebar will be shown when contents are available.
          </td>
        </tr>
        <tr>
          <td class="mth">set_sidebar_visible(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the sidebar to be shown or hidden when contents are available.
          </td>
        </tr>
        <tr>
          <td class="mth">get_tabs_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if tabs will be shown for open files.
          </td>
        </tr>
        <tr>
          <td class="mth">set_tabs_visible(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls if tabs will be shown for open files.
          </td>
        </tr>
        <tr>
          <td class="mth">is_minimap_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the minimap is enabled.
          </td>
        </tr>
        <tr>
          <td class="mth">set_minimap_visible(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls the visibility of the minimap.
          </td>
        </tr>
        <tr>
          <td class="mth">is_status_bar_visible()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the status bar will be shown.
          </td>
        </tr>
        <tr>
          <td class="mth">set_status_bar_visible(flag)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Controls the visibility of the status bar.
          </td>
        </tr>
        <tr>
          <td class="mth">folders()</td>
          <td class="rtn">[str]</td>
          <td class="dsc">
            Returns a list of the currently open folders.
          </td>
        </tr>
        <tr>
          <td class="mth">project_file_name()</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns name of the currently opened project file, if any.
          </td>
        </tr>
        <tr>
          <td class="mth">project_data()</td>
          <td class="rtn">dict</td>
          <td class="dsc">
            Returns the project data associated with the current window. The data is in the same format as the contents of a <span class="file">.sublime-project</span> file.
          </td>
        </tr>
        <tr>
          <td class="mth">set_project_data(data)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Updates the project data associated with the current window. If the window is associated with a <span class="file">.sublime-project</span> file, the project file will be updated on disk, otherwise the window will store the data internally.
          </td>
        </tr>
        <tr>
          <td class="mth">run_command(string, &lt;args&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Runs the named <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.WindowCommand">WindowCommand</a> with the (optional) given
            <tt>args</tt>. This method is able to run any sort of command, dispatching the command via input focus.
          </td>
        </tr>
        <tr>
          <td class="mth">show_quick_panel(items, on_done, &lt;flags&gt;, &lt;selected_index&gt;, &lt;on_highlighted&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              Shows a quick panel, to select an item in a list.
              <tt>on_done</tt> will be called once, with the index of the selected item. If the quick panel was cancelled,
              <tt>on_done</tt> will be called with an argument of
              <tt>-1</tt>.
            </p>
            <p>
              <tt>items</tt> may be a list of strings, or a list of string lists. In the latter case, each entry in the quick panel will show multiple rows.
            </p>
            <p>
              <tt>flags</tt> is a bitwise OR of
              <tt>sublime.MONOSPACE_FONT</tt> and
              <tt>sublime.KEEP_OPEN_ON_FOCUS_LOST</tt>
            </p>
            <p>
              <tt>on_highlighted</tt>, if given, will be called every time the highlighted item in the quick panel is changed.
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">show_input_panel(caption, initial_text, on_done, on_change, on_cancel)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            Shows the input panel, to collect a line of input from the user.
            <tt>on_done</tt> and
            <tt>on_change</tt>, if not
            <tt>None</tt>, should both be functions that expect a single string argument.
            <tt>on_cancel</tt> should be a function that expects no arguments. The view used for the input widget is returned.
          </td>
        </tr>
        <tr>
          <td class="mth">create_output_panel(name, &lt;unlisted&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a></td>
          <td class="dsc">
            <p>
              Returns the view associated with the named output panel, creating it if required. The output panel can be shown by running the
              <tt>show_panel</tt> window command, with the
              <tt>panel</tt> argument set to the name with an
              <tt>"output."</tt> prefix.
            </p>
            <p>
              The optional
              <tt>unlisted</tt> parameter is a boolean to control if the output panel should be listed in the panel switcher.
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">find_output_panel(name)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.View">View</a> <em>or</em> None</td>
          <td class="dsc">
            Returns the view associated with the named output panel, or
            <tt>None</tt> if the output panel does not exist.
          </td>
        </tr>
        <tr>
          <td class="mth">destroy_output_panel(name)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Destroys the named output panel, hiding it if currently open.
          </td>
        </tr>
        <tr>
          <td class="mth">active_panel()</td>
          <td class="rtn">str <em>or</em> None</td>
          <td class="dsc">
            Returns the name of the currently open panel, or
            <tt>None</tt> if no panel is open. Will return built-in panel names (e.g.
            <tt>"console"</tt>,
            <tt>"find"</tt>, etc) in addition to output panels.
          </td>
        </tr>
        <tr>
          <td class="mth">panels()</td>
          <td class="rtn">[str]</td>
          <td class="dsc">
            Returns a list of the names of all panels that have not been marked as unlisted. Includes certain built-in panels in addition to output panels.
          </td>
        </tr>
        <tr>
          <td class="mth">lookup_symbol_in_index(symbol)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-location">location</a>]</td>
          <td class="dsc">
            Returns all locations where the symbol is defined across files in the current project.
          </td>
        </tr>
        <tr>
          <td class="mth">lookup_symbol_in_open_files(symbol)</td>
          <td class="rtn">[<a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-location">location</a>]</td>
          <td class="dsc">
            Returns all locations where the symbol is defined across open files.
          </td>
        </tr>
        <tr>
          <td class="mth">extract_variables()</td>
          <td class="rtn">dict</td>
          <td class="dsc">
            <p>
              Returns a dictionary of strings populated with contextual keys:
            </p>
            <p>
              <tt>packages, platform, file, file_path, file_name, file_base_name, file_extension, folder, project, project_path, project_name, project_base_name, project_extension</tt>. This dict is suitable for passing to
              <tt>sublime.expand_variables()</tt>.
            </p>
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime.Settings"><code>sublime.Settings</code> Class</h2>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">get(name, &lt;default&gt;)</td>
          <td class="rtn"><a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-value">value</a></td>
          <td class="dsc">
            Returns the named setting, or
            <tt>default</tt> if it's not defined. If not passed,
            <tt>default</tt> will have a value of
            <tt>None</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">set(name, value)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Sets the named setting. Only primitive types, lists, and dicts are accepted.
          </td>
        </tr>
        <tr>
          <td class="mth">erase(name)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Removes the named setting. Does not remove it from any parent Settings.
          </td>
        </tr>
        <tr>
          <td class="mth">has(name)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> iff the named option exists in this set of Settings or one of its parents.
          </td>
        </tr>
        <tr>
          <td class="mth">add_on_change(key, on_change)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Register a callback to be run whenever a setting in this object is changed.
          </td>
        </tr>
        <tr>
          <td class="mth">clear_on_change(key)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Remove all callbacks registered with the given
            <tt>key</tt>.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime_plugin"><code>sublime_plugin</code> Module</h2>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">(no methods)</td>
          <td class="rtn"></td>
          <td class="dsc"></td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime_plugin.EventListener"><code>sublime_plugin.EventListener</code> Class</h2>
    <p>
      Note that many of these events are triggered by the buffer underlying the view, and thus the method is only called once, with the first view as the parameter.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">on_new(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a new buffer is created.
          </td>
        </tr>
        <tr>
          <td class="mth">on_new_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a new buffer is created. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_clone(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view is cloned from an existing one.
          </td>
        </tr>
        <tr>
          <td class="mth">on_clone_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view is cloned from an existing one. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_load(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the file is finished loading.
          </td>
        </tr>
        <tr>
          <td class="mth">on_load_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the file is finished loading. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_pre_close(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view is about to be closed. The view will still be in the window at this point.
          </td>
        </tr>
        <tr>
          <td class="mth">on_close(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view is closed (note, there may still be other views into the same buffer).
          </td>
        </tr>
        <tr>
          <td class="mth">on_pre_save(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called just before a view is saved.
          </td>
        </tr>
        <tr>
          <td class="mth">on_pre_save_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called just before a view is saved. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_post_save(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after a view has been saved.
          </td>
        </tr>
        <tr>
          <td class="mth">on_post_save_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after a view has been saved. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_modified(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after changes have been made to a view.
          </td>
        </tr>
        <tr>
          <td class="mth">on_modified_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after changes have been made to a view. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_selection_modified(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after the selection has been modified in a view.
          </td>
        </tr>
        <tr>
          <td class="mth">on_selection_modified_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after the selection has been modified in a view. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_activated(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view gains input focus.
          </td>
        </tr>
        <tr>
          <td class="mth">on_activated_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view gains input focus. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_deactivated(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view loses input focus.
          </td>
        </tr>
        <tr>
          <td class="mth">on_deactivated_async(view)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view loses input focus. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_hover(view, point, hover_zone)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              Called when the user's mouse hovers over a view for a short period.
            </p>
            <p>
              <tt>point</tt> is the closest point in the view to the mouse location. The mouse may not actually be located adjacent based on the value of
              <tt>hover_zone</tt>:
            </p>
            <ul>
              <li>
                <tt>sublime.HOVER_TEXT</tt>: When the mouse is hovered over text.
              </li>
              <li>
                <tt>sublime.HOVER_GUTTER</tt>: When the mouse is hovered over the gutter.
              </li>
              <li>
                <tt>sublime.HOVER_MARGIN</tt>: When the mouse is hovered in whitespace to the right of a line.
              </li>
            </ul>
          </td>
        </tr>
        <tr>
          <td class="mth">on_query_context(view, key, operator, operand, match_all)</td>
          <td class="rtn">bool <em>or</em> None</td>
          <td class="dsc">
            <p>
              Called when determining to trigger a key binding with the given context
              <tt>key</tt>. If the plugin knows how to respond to the context, it should return either
              <tt>True</tt> of
              <tt>False</tt>. If the context is unknown, it should return
              <tt>None</tt>.
            </p>
            <p>
              <tt>operator</tt> is one of:
            </p>
            <ul>
              <li>
                <tt>sublime.OP_EQUAL</tt>: Is the value of the context equal to the operand?
              </li>
              <li>
                <tt>sublime.OP_NOT_EQUAL</tt>: Is the value of the context not equal to the operand?
              </li>
              <li>
                <tt>sublime.OP_REGEX_MATCH</tt>: Does the value of the context match the regex given in operand?
              </li>
              <li>
                <tt>sublime.OP_NOT_REGEX_MATCH</tt>: Does the value of the context not match the regex given in operand?
              </li>
              <li>
                <tt>sublime.OP_REGEX_CONTAINS</tt>: Does the value of the context contain a substring matching the regex given in operand?
              </li>
              <li>
                <tt>sublime.OP_NOT_REGEX_CONTAINS</tt>: Does the value of the context not contain a substring matching the regex given in operand?
              </li>
            </ul>
            <p>
              <tt>match_all</tt> should be used if the context relates to the selections: does every selection have to match (
              <tt>match_all == True</tt>), or is at least one matching enough (
              <tt>match_all == False</tt>)?
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">on_query_completions(view, prefix, locations)</td>
          <td class="rtn">list<em>,</em> tuple <em>or</em> None</td>
          <td class="dsc">
            <p>
              Called whenever completions are to be presented to the user. The
              <tt>prefix</tt> is a unicode string of the text to complete.
            </p>
            <p>
              <tt>locations</tt> is a list of <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-point">points</a>. Since this method is called for all completions in every view no matter the syntax, <code class="  language-python">view<span class="token punctuation">.</span>match_selector<span class="token punctuation">(</span>point<span class="token punctuation">,</span> relevant_scope<span class="token punctuation">)</span></code> should be called to determine if the point is relevant.
            </p>
            <p>
              The return value must be one of the following formats:
            </p>
            <ul>
              <li>
                <p>
                  <tt>None</tt>: no completions are provided
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="0"><code class="  language-python"><span class="token keyword">return</span> None</code></pre>
                <p></p>
              </li>
              <li>
                <p>
                  A list of 2-element lists/tuples. The first element is a unicode string of the completion trigger, the second is the unicode replacement text.
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="1"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"me1"</span><span class="token punctuation">,</span> <span class="token string">"method1()"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"me2"</span><span class="token punctuation">,</span> <span class="token string">"method2()"</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre>
                <p></p>
                <p>
                  The trigger may contain a tab character (
                  <tt>\t</tt>) followed by a hint to display in the right-hand side of the completion box.
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="2"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">"me1\tmethod"</span><span class="token punctuation">,</span> <span class="token string">"method1()"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">"me2\tmethod"</span><span class="token punctuation">,</span> <span class="token string">"method2()"</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span></code></pre>
                <p></p>
                <p>
                  The replacement text may contain dollar-numeric fields such as a snippet does, e.g.
                  <tt>$0</tt>,
                  <tt>$1</tt>.
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="3"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">"fn"</span><span class="token punctuation">,</span> <span class="token string">"def ${1:name}($2) { $0 }"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">"for"</span><span class="token punctuation">,</span> <span class="token string">"for ($1; $2; $3) { $0 }"</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span></code></pre>
                <p></p>
              </li>
              <li>
                <p>
                  A 2-element tuple with the first element being the list format documented above, and the second element being bit flags from the following list:
                </p>
                <ul>
                  <li>
                    <tt>sublime.INHIBIT_WORD_COMPLETIONS</tt>: prevent Sublime Text from showing completions based on the contents of the view
                  </li>
                  <li>
                    <tt>sublime.INHIBIT_EXPLICIT_COMPLETIONS</tt>: prevent Sublime Text from showing completions based on
                    <tt>.sublime-completions</tt> files
                  </li>
                </ul>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="4"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">"me1"</span><span class="token punctuation">,</span> <span class="token string">"method1()"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">"me2"</span><span class="token punctuation">,</span> <span class="token string">"method2()"</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    sublime<span class="token punctuation">.</span>INHIBIT_WORD_COMPLETIONS <span class="token operator">|</span> sublime<span class="token punctuation">.</span>INHIBIT_EXPLICIT_COMPLETIONS
<span class="token punctuation">)</span></code></pre>
                <p></p>
              </li>
            </ul>
          </td>
        </tr>
        <tr>
          <td class="mth">on_text_command(view, command_name, args)</td>
          <td class="rtn">(str, dict)</td>
          <td class="dsc">
            Called when a text command is issued. The listener may return a
            <tt>(command, arguments)</tt> tuple to rewrite the command, or
            <tt>None</tt> to run the command unmodified.
          </td>
        </tr>
        <tr>
          <td class="mth">on_window_command(window, command_name, args)</td>
          <td class="rtn">(str, dict)</td>
          <td class="dsc">
            Called when a window command is issued. The listener may return a
            <tt>(command, arguments)</tt> tuple to rewrite the command, or
            <tt>None</tt> to run the command unmodified.
          </td>
        </tr>
        <tr>
          <td class="mth">on_post_text_command(view, command_name, args)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after a text command has been executed.
          </td>
        </tr>
        <tr>
          <td class="mth">on_post_window_command(window, command_name, args)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after a window command has been executed.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime_plugin.ViewEventListener"><code>sublime_plugin.ViewEventListener</code> Class</h2>
    <p>
      A class that provides similar event handling to <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.EventListener">EventListener</a>, but bound to a specific view. Provides class method-based filtering to control what views objects are created for.
    </p>
    <p>
      The view is passed as a single parameter to the constructor. The default implementation makes the view available via
      <tt>self.view</tt>.
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Class Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">is_applicable(settings)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            A
            <tt>@classmethod</tt> that receives a <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#sublime.Settings">Settings</a> object and should return a bool indicating if this class applies to a view with those settings
          </td>
        </tr>
        <tr>
          <td class="mth">applies_to_primary_view_only()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            A
            <tt>@classmethod</tt> that should return a bool indicating if this class applies only to the primary view for a file. A view is considered primary if it is the only, or first, view into a file.
          </td>
        </tr>
      </tbody>
    </table>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">on_modified()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after changes have been made to the view.
          </td>
        </tr>
        <tr>
          <td class="mth">on_modified_async()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after changes have been made to the view. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_selection_modified()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after the selection has been modified in the view.
          </td>
        </tr>
        <tr>
          <td class="mth">on_selection_modified_async()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called after the selection has been modified in the view. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_activated()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when a view gains input focus.
          </td>
        </tr>
        <tr>
          <td class="mth">on_activated_async()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the view gains input focus. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_deactivated()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the view loses input focus.
          </td>
        </tr>
        <tr>
          <td class="mth">on_deactivated_async()</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the view loses input focus. Runs in a separate thread, and does not block the application.
          </td>
        </tr>
        <tr>
          <td class="mth">on_hover(point, hover_zone)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            <p>
              Called when the user's mouse hovers over the view for a short period.
            </p>
            <p>
              <tt>point</tt> is the closest point in the view to the mouse location. The mouse may not actually be located adjacent based on the value of
              <tt>hover_zone</tt>:
            </p>
            <ul>
              <li>
                <tt>sublime.HOVER_TEXT</tt>: When the mouse is hovered over text.
              </li>
              <li>
                <tt>sublime.HOVER_GUTTER</tt>: When the mouse is hovered over the gutter.
              </li>
              <li>
                <tt>sublime.HOVER_MARGIN</tt>: When the mouse is hovered in whitespace to the right of a line.
              </li>
            </ul>
          </td>
        </tr>
        <tr>
          <td class="mth">on_query_context(key, operator, operand, match_all)</td>
          <td class="rtn">bool <em>or</em> None</td>
          <td class="dsc">
            <p>
              Called when determining to trigger a key binding with the given context
              <tt>key</tt>. If the plugin knows how to respond to the context, it should return either
              <tt>True</tt> of
              <tt>False</tt>. If the context is unknown, it should return
              <tt>None</tt>.
            </p>
            <p>
              <tt>operator</tt> is one of:
            </p>
            <ul>
              <li>
                <tt>sublime.OP_EQUAL</tt>: Is the value of the context equal to the operand?
              </li>
              <li>
                <tt>sublime.OP_NOT_EQUAL</tt>: Is the value of the context not equal to the operand?
              </li>
              <li>
                <tt>sublime.OP_REGEX_MATCH</tt>: Does the value of the context match the regex given in operand?
              </li>
              <li>
                <tt>sublime.OP_NOT_REGEX_MATCH</tt>: Does the value of the context not match the regex given in operand?
              </li>
              <li>
                <tt>sublime.OP_REGEX_CONTAINS</tt>: Does the value of the context contain a substring matching the regex given in operand?
              </li>
              <li>
                <tt>sublime.OP_NOT_REGEX_CONTAINS</tt>: Does the value of the context not contain a substring matching the regex given in operand?
              </li>
            </ul>
            <p>
              <tt>match_all</tt> should be used if the context relates to the selections: does every selection have to match (
              <tt>match_all == True</tt>), or is at least one matching enough (
              <tt>match_all == False</tt>)?
            </p>
          </td>
        </tr>
        <tr>
          <td class="mth">on_query_completions(prefix, locations)</td>
          <td class="rtn">list<em>,</em> tuple <em>or</em> None</td>
          <td class="dsc">
            <p>
              Called whenever completions are to be presented to the user. The
              <tt>prefix</tt> is a unicode string of the text to complete.
            </p>
            <p>
              <tt>locations</tt> is a list of <a href="https://macdfree.github.io/2016/09/18/SublimeText3API/#type-point">points</a>. Since this method is called for all completions no matter the syntax, <code class="  language-python">self<span class="token punctuation">.</span>view<span class="token punctuation">.</span>match_selector<span class="token punctuation">(</span>point<span class="token punctuation">,</span> relevant_scope<span class="token punctuation">)</span></code> should be called to determine if the point is relevant.
            </p>
            <p>
              The return value must be one of the following formats:
            </p>
            <ul>
              <li>
                <p>
                  <tt>None</tt>: no completions are provided
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="5"><code class="  language-python"><span class="token keyword">return</span> None</code></pre>
                <p></p>
              </li>
              <li>
                <p>
                  A list of 2-element lists/tuples. The first element is a unicode string of the completion trigger, the second is the unicode replacement text.
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="6"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"me1"</span><span class="token punctuation">,</span> <span class="token string">"method1()"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"me2"</span><span class="token punctuation">,</span> <span class="token string">"method2()"</span><span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre>
                <p></p>
                <p>
                  The trigger may contain a tab character (
                  <tt>\t</tt>) followed by a hint to display in the right-hand side of the completion box.
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="7"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">"me1\tmethod"</span><span class="token punctuation">,</span> <span class="token string">"method1()"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">"me2\tmethod"</span><span class="token punctuation">,</span> <span class="token string">"method2()"</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span></code></pre>
                <p></p>
                <p>
                  The replacement text may contain dollar-numeric fields such as a snippet does, e.g.
                  <tt>$0</tt>,
                  <tt>$1</tt>.
                </p>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="8"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token punctuation">[</span><span class="token string">"fn"</span><span class="token punctuation">,</span> <span class="token string">"def ${1:name}($2) { $0 }"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token string">"for"</span><span class="token punctuation">,</span> <span class="token string">"for ($1; $2; $3) { $0 }"</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span></code></pre>
                <p></p>
              </li>
              <li>
                <p>
                  A 2-element tuple with the first element being the list format documented above, and the second element being bit flags from the following list:
                </p>
                <ul>
                  <li>
                    <tt>sublime.INHIBIT_WORD_COMPLETIONS</tt>: prevent Sublime Text from showing completions based on the contents of the view
                  </li>
                  <li>
                    <tt>sublime.INHIBIT_EXPLICIT_COMPLETIONS</tt>: prevent Sublime Text from showing completions based on
                    <tt>.sublime-completions</tt> files
                  </li>
                </ul>
                <p>
                </p><pre class="  language-python" data-initialized="true" data-gclp-id="9"><code class="  language-python"><span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">"me1"</span><span class="token punctuation">,</span> <span class="token string">"method1()"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string">"me2"</span><span class="token punctuation">,</span> <span class="token string">"method2()"</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    sublime<span class="token punctuation">.</span>INHIBIT_WORD_COMPLETIONS <span class="token operator">|</span> sublime<span class="token punctuation">.</span>INHIBIT_EXPLICIT_COMPLETIONS
<span class="token punctuation">)</span></code></pre>
                <p></p>
              </li>
            </ul>
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime_plugin.ApplicationCommand"><code>sublime_plugin.ApplicationCommand</code> Class</h2>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">run(&lt;args&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the command is run.
          </td>
        </tr>
        <tr>
          <td class="mth">is_enabled(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the command is able to be run at this time. The default implementation simply always returns
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">is_visible(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the command should be shown in the menu at this time. The default implementation always returns
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">is_checked(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if a checkbox should be shown next to the menu item. The <span class="file">.sublime-menu</span> file must have the checkbox attribute set to
            <tt>true</tt> for this to be used.
          </td>
        </tr>
        <tr>
          <td class="mth">description(&lt;args&gt;)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns a description of the command with the given arguments. Used in the menu, if no caption is provided. Return
            <tt>None</tt> to get the default description.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime_plugin.WindowCommand"><code>sublime_plugin.WindowCommand</code>Class</h2>
    <p>
      WindowCommands are instantiated once per window. The Window object may be retrieved via
      <tt>self.window</tt>
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">run(&lt;args&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the command is run.
          </td>
        </tr>
        <tr>
          <td class="mth">is_enabled(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the command is able to be run at this time. The default implementation simply always returns
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">is_visible(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the command should be shown in the menu at this time. The default implementation always returns
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">description(&lt;args&gt;)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns a description of the command with the given arguments. Used in the menu, if no caption is provided. Return
            <tt>None</tt> to get the default description.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <section>
    <h2 id="sublime_plugin.TextCommand"><code>sublime_plugin.TextCommand</code> Class</h2>
    <p>
      TextCommands are instantiated once per view. The View object may be retrieved via
      <tt>self.view</tt>
    </p>
    <table class="functions">
      <tbody>
        <tr>
          <th>Methods</th>
          <th>Return Value</th>
          <th>Description</th>
        </tr>
        <tr>
          <td class="mth">run(edit, &lt;args&gt;)</td>
          <td class="rtn">None</td>
          <td class="dsc">
            Called when the command is run.
          </td>
        </tr>
        <tr>
          <td class="mth">is_enabled(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the command is able to be run at this time. The default implementation simply always returns
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">is_visible(&lt;args&gt;)</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Returns
            <tt>True</tt> if the command should be shown in the menu at this time. The default implementation always returns
            <tt>True</tt>.
          </td>
        </tr>
        <tr>
          <td class="mth">description(&lt;args&gt;)</td>
          <td class="rtn">str</td>
          <td class="dsc">
            Returns a description of the command with the given arguments. Used in the menus, and for Undo / Redo descriptions. Return
            <tt>None</tt> to get the default description.
          </td>
        </tr>
        <tr>
          <td class="mth">want_event()</td>
          <td class="rtn">bool</td>
          <td class="dsc">
            Return
            <tt>True</tt> to receive an
            <tt>event</tt> argument when the command is triggered by a mouse action. The event information allows commands to determine which portion of the view was clicked on. The default implementation returns
            <tt>False</tt>.
          </td>
        </tr>
      </tbody>
    </table>
  </section>
  <form id="gclp-frame-form" target="gclp-frame" method="post" style="display: none;"></form>
  <div class="gclp-code-grabber" data-gclp-id="0" data-hasqtip="true" style="left: 1238.5px; top: 13853.8px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="1" data-hasqtip="true" style="left: 1238.5px; top: 13949px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="2" data-hasqtip="true" style="left: 1238.5px; top: 14045.1px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="3" data-hasqtip="true" style="left: 1238.5px; top: 14202.3px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="4" data-hasqtip="true" style="left: 1238.5px; top: 14453.3px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="5" data-hasqtip="true" style="left: 1238.5px; top: 16298.5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="6" data-hasqtip="true" style="left: 1238.5px; top: 16393.7px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="7" data-hasqtip="true" style="left: 1238.5px; top: 16489.9px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="8" data-hasqtip="true" style="left: 1238.5px; top: 16647.1px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="9" data-hasqtip="true" style="left: 1238.5px; top: 16898.1px; display: none;"></div>
  <div class="transit-notify-list">
    <div class="transit-list-inner"></div>
  </div>
  <div class="gclp-code-grabber" data-gclp-id="10" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="11" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="12" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="13" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="14" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="15" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="16" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="17" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="18" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="19" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="20" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="21" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="22" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="23" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="24" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="25" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="26" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="27" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="28" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="29" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="30" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="31" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="32" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="33" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="34" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="35" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="36" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="37" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="38" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="39" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="40" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="41" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="42" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="43" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="44" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="45" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="46" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="47" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="48" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="49" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="50" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="51" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="52" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="53" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="54" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="55" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="56" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="57" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="58" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="59" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="60" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="61" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="62" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="63" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="64" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="65" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="66" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="67" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="68" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="69" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="70" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="71" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="72" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="73" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="74" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="75" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="76" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="77" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="78" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="79" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="80" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="81" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="82" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="83" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="84" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="85" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="86" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="87" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="88" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="89" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="90" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="91" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="92" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="93" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="94" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="95" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="96" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="97" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="98" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="99" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="100" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="101" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="102" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="103" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
  <div class="gclp-code-grabber" data-gclp-id="104" data-hasqtip="true" style="left: -30px; top: 5px; display: none;"></div>
</body>

</html>

]]></content>
    
    <summary type="html">
    
      &lt;!DOCTYPE html&gt;
&lt;!-- saved from url=(0054)https://macdfree.github.io/2016/09/18/SublimeText3API/ --&gt;
&lt;html class=&quot;&quot;&gt;

&lt;head&gt;
  &lt;meta http-eq
    
    </summary>
    
      <category term="html" scheme="https://macdfree.github.io/categories/html/"/>
    
    
  </entry>
  
  <entry>
    <title>Oracle导库</title>
    <link href="https://macdfree.github.io/2016/09/29/Oracle%E5%AF%BC%E5%BA%93/"/>
    <id>https://macdfree.github.io/2016/09/29/Oracle导库/</id>
    <published>2016-09-28T16:10:57.000Z</published>
    <updated>2016-10-20T01:23:52.497Z</updated>
    
    <content type="html"><![CDATA[<p>Oracle导库主要分成清库、清空回收站、导库三个步骤。</p>
<a id="more"></a>
<ol>
<li><p>清库</p>
<p> 将<code>Function</code>、<code>Procedures</code>、<code>Packages</code>、<code>Package bodies</code>、<code>Tables</code>、<code>Triggers</code>、<code>views</code>、<code>Sequences</code>都删除</p>
</li>
<li><p>清空回收站</p>
<p> 执行<code>purge recyclebin</code>，把drop后回收站中的数据清空</p>
</li>
<li><p>导库</p>
<ol>
<li><p>imp导入</p>
<p> <code>imp 用户名/密码@ip:port/数据库名 file=d:\sh\shjc_1211.dmp log=d:\sh\imp_shjc_1211.log full=y ignore=y</code>，其中<code>用户名/密码@ip:port/数据库名</code>为数据库连接，格式为：<code>用户名/密码@192.168.208.120:1521/orcl</code>，<code>file</code>为备份文件的路径，<code>log</code>为日志文件路径。</p>
</li>
<li><p>impdp导入</p>
<p> <code>impdp 用户名/密码@ip:port/数据库名 directory=dir_dp dumpfile=dept.dmp remap_schema=scott:system remap_tablespace=users:tbs1</code>，<code>directory</code>参数指定要导入的备份所在的文件夹，可以用<code>select * from dba_directories;</code>查看文件夹；<code>dumpfile</code>参数指定备份文件名；<code>remap_schema</code>为重新指定schema，格式为<code>src:des</code>；<code>remap_tablespace</code>为重新指定tablespace，格式为<code>src:des</code>。</p>
</li>
</ol>
</li>
</ol>
<p>注：使用数据泵方式导入时，遇到版本不兼容的问题，原因是使用高版本的oracle导出的备份，在低版本上导入。解决方法是在导出语句后加上<code>version</code>参数指定导入数据库的版本</p>
<hr>
<p>补充</p>
<p>2016年9月29日</p>
<p>今天测试服务器上有一张表搞坏了，然后老大让我从备份中单独还原这张表的数据，这边也记录一下</p>
<p><code>imp 用户名/密码@ip:port/数据库名 file=E:\EpointBid_TP6j20160929.dmp log=E:\EpointBid_TP6j20160929.log tables=(table_struct)</code></p>
<p>其实就是加了一个<code>tables</code>参数来指定需要导入的表。另外，今天也发现就算数据库备份和需要导入的数据库表空间不一样也是可以导入成功的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Oracle导库主要分成清库、清空回收站、导库三个步骤。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="Oracle" scheme="https://macdfree.github.io/tags/Oracle/"/>
    
      <category term="导库" scheme="https://macdfree.github.io/tags/%E5%AF%BC%E5%BA%93/"/>
    
      <category term="数据泵" scheme="https://macdfree.github.io/tags/%E6%95%B0%E6%8D%AE%E6%B3%B5/"/>
    
  </entry>
  
  <entry>
    <title>测试HTML</title>
    <link href="https://macdfree.github.io/2016/09/18/%E6%B5%8B%E8%AF%95html/"/>
    <id>https://macdfree.github.io/2016/09/18/测试html/</id>
    <published>2016-09-17T16:32:24.000Z</published>
    <updated>2016-10-02T10:46:13.511Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>WYSIWYG</title>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>
  <div id="content"></div>
  <textarea id="text"></textarea>
  <script src="https://code.jquery.com/jquery-3.1.0.js" integrity="sha256-slogkvB1K3VOkzAI8QITxV3VzpOnkeNVsKvtkYLMjfk=" crossorigin="anonymous"></script>
  <script type="text/javascript">
  var text = document.getElementById("text");
  text.onchange = function() {
    document.getElementById("content").innerHTML = text.value;
  };
  </script>
</body>

</html>
]]></content>
    
    <summary type="html">
    
      &lt;!DOCTYPE html&gt;
&lt;html&gt;

&lt;head&gt;
  &lt;meta charset=&quot;utf-8&quot;&gt;
  &lt;title&gt;WYSIWYG&lt;/title&gt;
  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;

    
    </summary>
    
      <category term="html" scheme="https://macdfree.github.io/categories/html/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS注册服务脚本</title>
    <link href="https://macdfree.github.io/2016/08/26/CentOS%E6%B3%A8%E5%86%8C%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC/"/>
    <id>https://macdfree.github.io/2016/08/26/CentOS注册服务脚本/</id>
    <published>2016-08-26T04:44:52.000Z</published>
    <updated>2016-09-17T12:28:06.565Z</updated>
    
    <content type="html"><![CDATA[<p>公司测试系统使用wrapper+tomcat部署，在CentOS环境上通过执行wrapper启动系统，但由于是在终端中执行，当退出终端后wrapper也会退出，所以想到将wrapper注册成系统服务。</p>
<a id="more"></a>
<p>首先需要编写启动服务的脚本：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#description: 这是一个系统服务脚本</span></div><div class="line"><span class="comment">#chkconfig: 2345 20 81 </span></div><div class="line"></div><div class="line">EXEC_PATH=/usr/<span class="built_in">local</span>/          <span class="comment">#需要注册的可执行文件所在文件夹的路径</span></div><div class="line">EXEC=hello.sh                  <span class="comment">#需要注册的可执行文件的文件名</span></div><div class="line">DAEMON=/usr/<span class="built_in">local</span>/hello.sh     <span class="comment">#需要注册的可执行文件的完整文件名</span></div><div class="line">PID_FILE=/var/run/hello.sh.pid <span class="comment">#指定运行时的进程号</span></div><div class="line"></div><div class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span>   <span class="comment">#调用通用方法</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ ! -x <span class="variable">$EXEC_PATH</span>/<span class="variable">$EXEC</span> ]; <span class="keyword">then</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"ERROR: <span class="variable">$DAEMON</span> not found"</span></div><div class="line">    <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">stop</span></span>()</div><div class="line">&#123;</div><div class="line">    <span class="built_in">echo</span> <span class="string">"Stoping <span class="variable">$EXEC</span> ..."</span></div><div class="line">    ps aux | grep <span class="string">"<span class="variable">$DAEMON</span>"</span> | <span class="built_in">kill</span> -9 `awk <span class="string">'&#123;print $2&#125;'</span>` &gt;/dev/null 2&gt;&amp;1</div><div class="line">    rm <span class="_">-f</span> <span class="variable">$PID_FILE</span></div><div class="line">    usleep 100</div><div class="line">    <span class="built_in">echo</span> <span class="string">"Shutting down <span class="variable">$EXEC</span>: [  OK  ]"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">start</span></span>()</div><div class="line">&#123;</div><div class="line">    <span class="built_in">echo</span> <span class="string">"Starting <span class="variable">$EXEC</span> ..."</span></div><div class="line">    <span class="variable">$DAEMON</span> &gt; /dev/null &amp;</div><div class="line">    pidof <span class="variable">$EXEC</span> &gt; <span class="variable">$PID_FILE</span></div><div class="line">    usleep 100</div><div class="line">    <span class="built_in">echo</span> <span class="string">"Starting <span class="variable">$EXEC</span>: [  OK  ]"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">restart</span></span>()</div><div class="line">&#123;</div><div class="line">    stop</div><div class="line">    start</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line">    start)</div><div class="line">        start</div><div class="line">        ;;</div><div class="line">    stop)</div><div class="line">        stop</div><div class="line">        ;;</div><div class="line">    restart)</div><div class="line">        restart</div><div class="line">        ;;</div><div class="line">    status)</div><div class="line">        status -p <span class="variable">$PID_FILE</span> <span class="variable">$DAEMON</span></div><div class="line">        ;;</div><div class="line">    *)</div><div class="line">        <span class="built_in">echo</span> <span class="string">"Usage: service <span class="variable">$EXEC</span> &#123;start|stop|restart|status&#125;"</span></div><div class="line">        <span class="built_in">exit</span> 1</div><div class="line"><span class="keyword">esac</span></div><div class="line"></div><div class="line"><span class="built_in">exit</span> $?</div></pre></td></tr></table></figure></p>
<p>完成脚本编写后执行以下命令注册成服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">chmod 700 test.sh             #设置脚本可执行</div><div class="line">cp test.sh /etc/rc.d/init.d/  #拷贝脚本</div><div class="line">chkconfig --add test.sh       #注册服务</div><div class="line">chkconfig --list              #显示注册的服务</div><div class="line">chkconfig  --del test.sh      #删除服务</div></pre></td></tr></table></figure>
<p>注意点：<br>启动脚本中 <code>#description:</code> 和 <code>#chkconfig: 2345 20 81</code> 是必须的，否则执行 <code>chkconfig --add test.sh</code> 时会提示错误。</p>
<p>补充：<br><code>#chkconfig</code>  中 <code>2345 20 81</code> 分别表示：</p>
<ul>
<li><p>2345表示服务的运行级别<br>  0：停机<br>  1：单用户模式<br>  2：多用户，没有 NFS<br>  3：完全多用户模式(标准的运行级)<br>  4：没有用到<br>  5：X11 多用户图形模式（xwindow)<br>  6：重新启动</p>
</li>
<li><p>20表示启动的优先级</p>
</li>
<li><p>81表示关闭的优先级</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公司测试系统使用wrapper+tomcat部署，在CentOS环境上通过执行wrapper启动系统，但由于是在终端中执行，当退出终端后wrapper也会退出，所以想到将wrapper注册成系统服务。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://macdfree.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://macdfree.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>看过的动漫</title>
    <link href="https://macdfree.github.io/2016/06/02/%E7%9C%8B%E8%BF%87%E7%9A%84%E5%8A%A8%E6%BC%AB/"/>
    <id>https://macdfree.github.io/2016/06/02/看过的动漫/</id>
    <published>2016-06-02T06:56:34.000Z</published>
    <updated>2016-09-29T16:30:16.866Z</updated>
    
    <content type="html"><![CDATA[<p>以下是我看过的动漫，算是一种收藏吧。</p>
<a id="more"></a>
<ol>
<li>名侦探柯南</li>
<li>柯南剧场版</li>
<li>未闻花名</li>
<li>Anothor</li>
<li>冰果</li>
<li>Angel Beats</li>
<li>穿越时空的少女</li>
<li>好想告诉你</li>
<li>千与千寻</li>
<li>幽灵公主</li>
<li>悬崖上的金鱼姬</li>
<li>萤火虫之墓</li>
<li>虞美人盛开的山坡</li>
<li>追逐繁星的孩子</li>
<li>fractal（分形）</li>
<li>秒速5厘米</li>
<li>云之彼端</li>
<li>萤火之森</li>
<li>寒蝉鸣泣之时</li>
<li>甜甜私房猫</li>
<li>我的女神</li>
<li>CLANNAD</li>
<li>龙猫</li>
<li>风之谷</li>
<li>宠物小精灵剧场版全集</li>
<li>未来日记</li>
<li>狼与香辛料</li>
<li>零之使魔</li>
<li>最终幻想圣子降临</li>
<li>AIR</li>
<li>天元突破红莲之眼</li>
<li>全职猎人</li>
<li>天空之城</li>
<li>网球王子</li>
<li>滑头鬼之孙</li>
<li>彩云国物语</li>
<li>魔女宅急便</li>
<li>哈尔的移动城堡</li>
<li>少年阴阳师</li>
<li>蜂蜜与四叶草</li>
<li>推理之绊</li>
<li>凉风</li>
<li>猫的报恩</li>
<li>借东西的小人阿莉埃蒂</li>
<li>地海战记</li>
<li>倾耳倾听</li>
<li>对某飞行员的追忆</li>
<li>人型电脑天使心</li>
<li>今天的5年2班</li>
<li>星之声</li>
<li>GOSICK</li>
<li>雷顿教授与永远的歌姬</li>
<li>超时空要塞F剧场版 - 虚空歌姬</li>
<li>神的记事本</li>
<li>散华礼弥</li>
<li>因果论</li>
<li>世纪末超自然学院</li>
<li>蒸汽少年</li>
<li>赤色的约定</li>
<li>被狙击的学园</li>
<li>君吻</li>
<li>濒危物种少女</li>
<li>雪之少女</li>
<li>隐之王</li>
<li>言叶之庭</li>
<li>花开物语</li>
<li>刀剑神域</li>
<li>樱花庄的宠物女孩</li>
<li>魔法禁书目录</li>
<li>东之伊甸</li>
<li>罪恶王冠</li>
<li>有你的小镇</li>
<li>龙与虎</li>
<li>快要坏掉的八音盒</li>
<li>文学少女</li>
<li>会长大人是女仆</li>
<li>命运石之门</li>
<li>高达seed destiny</li>
<li>中二病也要谈恋爱</li>
<li>sola天空</li>
<li>棋魂</li>
<li>我的妹妹不可能这么可爱</li>
<li>只有神知道的世界</li>
<li>夏目友人帐</li>
<li>境界的彼方</li>
<li>钢之炼金术师FA</li>
<li>英雄时代</li>
<li>起风了</li>
<li>黄昏少女X失忆</li>
<li>侵略！乌贼娘</li>
<li>潘多拉之心</li>
<li>化物语</li>
<li>尽管如此世界依然美丽</li>
<li>凉宫春日的消失</li>
<li>东方八犬异闻录</li>
<li>轻音少女</li>
<li>K</li>
<li>K MISSING KINGS</li>
<li>K RETURN OF KINGS</li>
<li>月刊少女野崎君</li>
<li>四月是你的谎言</li>
<li>邻座同学是怪咖</li>
<li>东京食尸鬼第一季</li>
<li>RWBY第一二季</li>
<li>HAL</li>
<li>食梦者</li>
<li>刀剑神域第二季</li>
<li>青春之旅</li>
<li>白兔糖</li>
<li>回忆三部曲</li>
<li>EVA</li>
<li>蓝宝石之谜</li>
<li>钢之炼金术师剧场版：叹息之丘的圣星</li>
<li>影鳄</li>
<li>影鳄·承</li>
<li>双星阴阳师</li>
<li>在下坂本有何贵干</li>
<li>Re：从零开始的异世界生活</li>
<li>线上游戏的老婆不可能是女生？</li>
<li>食戟之灵（1、2季）</li>
<li>颠倒的帕特玛</li>
<li>回忆中的玛妮</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下是我看过的动漫，算是一种收藏吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="动漫" scheme="https://macdfree.github.io/tags/%E5%8A%A8%E6%BC%AB/"/>
    
  </entry>
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="https://macdfree.github.io/2016/05/29/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://macdfree.github.io/2016/05/29/hexo搭建博客/</id>
    <published>2016-05-28T19:48:32.000Z</published>
    <updated>2016-09-25T07:07:57.384Z</updated>
    
    <content type="html"><![CDATA[<p>在网上看见使用Hexo和GitHub Page搭建博客的文章，闲来无事就仿照着做了一下。起初是在我的Windows电脑搭建，但觉得Windows和命令行不怎么协调，就改用我的树莓派搭建。</p>
<a id="more"></a>
<p>参考<a href="https://hexo.io/docs" target="_blank" rel="external">https://hexo.io/docs</a></p>
<h1 id="1-安装Node-js、Hexo和Git"><a href="#1-安装Node-js、Hexo和Git" class="headerlink" title="1. 安装Node.js、Hexo和Git"></a>1. 安装Node.js、Hexo和Git</h1><p>安装Node.js，Hexo官网推荐的使用nvm</p>
<p>cURL：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>
<p>Wget：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</div></pre></td></tr></table></figure></p>
<p>在树莓派上cURL方式测试失败，只能使用Wget方式。</p>
<p>安装完nvm后执行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nvm install 4</div></pre></td></tr></table></figure></p>
<p>参数4表示安装Node.js的版本。</p>
<p>安装Hexo：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<p>Git安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure></p>
<h1 id="2-初始化及配置"><a href="#2-初始化及配置" class="headerlink" title="2. 初始化及配置"></a>2. 初始化及配置</h1><p>切换到需要创建博客的目录，执行以下指令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p>修改_config.yml配置文件中的一些基本信息，参考<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="external">Hexo配置</a></p>
<p>需要再安装一些常用模块，在博客所在目录下执行以下指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save <span class="comment"># 用于生成feed</span></div><div class="line">npm install hexo-generator-sitemap --save <span class="comment"># 用于生成站点地图</span></div></pre></td></tr></table></figure></p>
<p>同时_config.yml中添加相应配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># feed</div><div class="line">feed:</div><div class="line">  type: atom</div><div class="line">  path: atom.xml</div><div class="line">  limit: 20</div><div class="line">  hub:</div><div class="line"></div><div class="line"># sitemap</div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div></pre></td></tr></table></figure></p>
<h1 id="3-使用Hexo新建文章并生成发布"><a href="#3-使用Hexo新建文章并生成发布" class="headerlink" title="3. 使用Hexo新建文章并生成发布"></a>3. 使用Hexo新建文章并生成发布</h1><p>新建文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure></p>
<p>其中layout为模板，可以在scaffolds目录中进行修改</p>
<p>生成静态页面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure></p>
<p>发布文章<br>由于本人使用Git发布方式，所以需要先安装git发布模块并在_config.yml中添加配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save <span class="comment">#安装git发布模块</span></div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: &lt;repository url&gt;</div><div class="line">  branch: [branch]</div><div class="line">  message: [message]</div></pre></td></tr></table></figure>
<p>完成上述操作后执行以下指令及发布成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>另外还可以使用 <code>hexo server</code> 命令进行本地浏览，此命令需要安装模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-server --save</div></pre></td></tr></table></figure></p>
<p>由于树莓派性能有限，<code>hexo server</code> 命令本地浏览会很缓慢，故不经常使用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在网上看见使用Hexo和GitHub Page搭建博客的文章，闲来无事就仿照着做了一下。起初是在我的Windows电脑搭建，但觉得Windows和命令行不怎么协调，就改用我的树莓派搭建。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://macdfree.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>低功耗节点设计日记01</title>
    <link href="https://macdfree.github.io/2014/07/08/%E4%BD%8E%E5%8A%9F%E8%80%97%E8%8A%82%E7%82%B9%E8%AE%BE%E8%AE%A1%E6%97%A5%E8%AE%B001/"/>
    <id>https://macdfree.github.io/2014/07/08/低功耗节点设计日记01/</id>
    <published>2014-07-07T16:00:00.000Z</published>
    <updated>2016-09-25T07:03:09.050Z</updated>
    
    <content type="html"><![CDATA[<p>本系列设计日记主要记录基于MSP430和CC1101的低功耗节点的硬件和程序设计过程，用于和他人分享设计思路和经验。今天是本系列设计日记的第一天，首先说明本节点的设计背景：本节点用于冷藏车内温度的实时监测，并通过射频的方式将数据发送至汇集节点。所要求实现的目标为：</p>
<a id="more"></a>
<ol>
<li>温度采集和无线射频传输</li>
<li>低功耗</li>
<li>同步</li>
<li>多址</li>
<li>防跑飞</li>
</ol>
<p>另外，应该还有一个功能，防止冷藏车主故意将节点移动到低温区从而实现伪造温度的行为。</p>
<p>根据上述要求，对于节点的设计，从硬件上来说要尽量减少外围负载，合理选用电源；从程序上来讲，要充分利用MSP430的低功耗特性，对于CC1101采用定时唤醒的方式传输数据，减少不必要的电源消耗。此外，拟采用霍尔开关实现对节点位置的判定。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本系列设计日记主要记录基于MSP430和CC1101的低功耗节点的硬件和程序设计过程，用于和他人分享设计思路和经验。今天是本系列设计日记的第一天，首先说明本节点的设计背景：本节点用于冷藏车内温度的实时监测，并通过射频的方式将数据发送至汇集节点。所要求实现的目标为：&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="CC1101" scheme="https://macdfree.github.io/tags/CC1101/"/>
    
      <category term="MSP430" scheme="https://macdfree.github.io/tags/MSP430/"/>
    
  </entry>
  
  <entry>
    <title>CC1101和MSP430调试</title>
    <link href="https://macdfree.github.io/2014/06/04/CC1101%E5%92%8CMSP430%E8%B0%83%E8%AF%95/"/>
    <id>https://macdfree.github.io/2014/06/04/CC1101和MSP430调试/</id>
    <published>2014-06-03T16:00:00.000Z</published>
    <updated>2016-09-25T07:03:39.338Z</updated>
    
    <content type="html"><![CDATA[<p>本篇记录最近调试基于MSP430的CC1101射频通信程序中遇到的问题和需要注意的地方。</p>
<a id="more"></a>
<ol>
<li><p>MSP430的硬件SPI部分</p>
<p>CC1101与MSP430间的通信通过SPI接口，程序使用MSP430的硬件SPI接口，需要配置相应的寄存器。其中我犯的错误是在配置完寄存器后没有置位USPIEx，关于SPI接口的状态转换图如下：<img src="m7.png" alt="SPI状态转换"><br>另外，关于MSP430对IO口复用设置的问题，对于SPI需要设置P3.1、P3.2、P3.3为SPI功能，分别对应SIMO0、SOMI0、UCLK0，其中SOMI0从数据的流向上来说是输入，而SIMO0和UCLK0为输出。那设置时要规定引脚的方向吗？数据手册中的这段话给出了答案：</p>
<blockquote>
<p>Setting PxSELx = 1 does not automatically set the pin direction. Other peripheral module functions may require the PxDIRx bits to be configured according to the direction needed for the module function. See the pin schematics in the device-specific datasheet.</p>
</blockquote>
<p>最后是关于使用非中断方式SPI接口中判断是否发送完毕的检测，照理来说使用IFG1中的UTXIFG0和U0TCTL中的TXEPT都是可以的，但最后还是使用了第二种方法（估计UTXIFG0需要手动清零，未验证）。</p>
</li>
<li><p>CC1101常用寄存器</p>
<ul>
<li>PKTCTRL1</li>
</ul>
<p>主要设置是否将RSSI和LQI状态字节附加在数据包后，以及是否开启地址检查。</p>
<ul>
<li>PKTCTRL0</li>
</ul>
<p>是否开启CRC校验，设置数据包长度配置，当为可变长时同步词汇后的第一个位配置数据包长度。</p>
<ul>
<li>MCSM1</li>
</ul>
<p>配置数据包发送或被接收后CC1101进入什么状态。</p>
</li>
</ol>
<hr>
<p>2014-06-08</p>
<p>补充：发现调试到最后加点延时就成功了，然后再把添加的延时注释掉程序依然正常运行，这该如何是好。。。。</p>
<p>插入延时的位置：</p>
<ol>
<li>设置完寄存器后</li>
<li>写TXFIFO后</li>
<li><code>while(!GDO0);while(GDO0);</code>后</li>
<li>每次发送或接收完后</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇记录最近调试基于MSP430的CC1101射频通信程序中遇到的问题和需要注意的地方。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="CC1101" scheme="https://macdfree.github.io/tags/CC1101/"/>
    
      <category term="MSP430" scheme="https://macdfree.github.io/tags/MSP430/"/>
    
  </entry>
  
  <entry>
    <title>C语言复杂声明的理解</title>
    <link href="https://macdfree.github.io/2014/04/15/C%E8%AF%AD%E8%A8%80%E5%A4%87%E5%BF%981/"/>
    <id>https://macdfree.github.io/2014/04/15/C语言备忘1/</id>
    <published>2014-04-14T16:00:00.000Z</published>
    <updated>2016-09-25T07:03:34.757Z</updated>
    
    <content type="html"><![CDATA[<p>本篇主要记录我现在对C语言中复杂声明的理解，以供以后的我参考。</p>
<a id="more"></a>
<p>我对复杂声明的疑惑是从一个并不怎么复杂的声明开始的：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> *a[];</div><div class="line"><span class="keyword">char</span> (*a)[];</div></pre></td></tr></table></figure></p>
<p>我的本意是声明一个指针数组，每个数组元素再指向一个字符串。当时我就开始迷惑到底是第一行的声明还是第二行的声明？然后我用了最直接的方法，两种都试了一下，发现第一种是正确的。以上虽然解决的眼前的问题，但作为处女座的我本能地想搞清楚对于这种声明应该怎么理解，经过搜索总结出了我自己的方法。</p>
<p>从网上搜索等到的最重要的一条准则是：C语言中的声明和使用是相一致的（大多数情况下）。例如声明<code>char *a</code>，<code>*</code>为取值符号，对<code>a</code>取值为<code>char</code>类型，那反过来<code>a</code>就是指向<code>char</code>类型的指针。</p>
<p>就以<code>char *a[];</code>为例，我会列出几个逻辑关系式</p>
<ol>
<li><code>a</code>是一个数组，因为它先和<code>[]</code>结合</li>
<li><code>a[]</code>是<code>char *</code>类型的，这里<code>a[]</code>可以认为是<code>a</code>数组中的某一个元素</li>
</ol>
<p>从以上两条可知这个声明就是我所需要的。而再看看第二个声明表达的意思是什么。</p>
<ol>
<li><code>a</code>是一个指针，因为它先和<code>*</code>结合</li>
<li><code>*a</code>是一个数组</li>
<li><code>(*a)[]</code>是<code>char</code>类型的</li>
</ol>
<p>由此可知<code>a</code>是指向一个<code>char</code>数组的指针。</p>
<p>继续复杂一点的<code>char *p(char *a, int (*b)(int));</code></p>
<p>写到这里觉得这种声明还是太简单了，好像没必要讲。。。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇主要记录我现在对C语言中复杂声明的理解，以供以后的我参考。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="C语言" scheme="https://macdfree.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>串口连接树莓派</title>
    <link href="https://macdfree.github.io/2014/04/08/%E4%B8%B2%E5%8F%A3%E8%BF%9E%E6%8E%A5%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    <id>https://macdfree.github.io/2014/04/08/串口连接树莓派/</id>
    <published>2014-04-07T16:00:00.000Z</published>
    <updated>2016-09-25T07:12:46.664Z</updated>
    
    <content type="html"><![CDATA[<p>通过树莓派的GPIO连接usb转串口模块连接电脑，通过Putty登录树莓派</p>
<a id="more"></a>
<p><img src="m6.png" alt="GPIO示意图"></p>
<p>连接方式为</p>
<table>
<thead>
<tr>
<th>usb转串口模块</th>
<th>树莓派GPIO</th>
</tr>
</thead>
<tbody>
<tr>
<td>TXD</td>
<td>RXD(GPIO15)</td>
</tr>
<tr>
<td>RXD</td>
<td>TXD(GPIO14)</td>
</tr>
</tbody>
</table>
<p>电源和地的话可接可不接</p>
<p>Putty设置com口，波特率为115200<br>另外最好将Putty的编码改为utf-8</p>
<p>参考<a href="http://www.cnblogs.com/ma6174/archive/2013/04/23/3038626.html" target="_blank" rel="external">通过串口连接控制树莓派</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过树莓派的GPIO连接usb转串口模块连接电脑，通过Putty登录树莓派&lt;/p&gt;
    
    </summary>
    
      <category term="wiki" scheme="https://macdfree.github.io/categories/wiki/"/>
    
    
      <category term="树莓派" scheme="https://macdfree.github.io/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>水质监测(2)</title>
    <link href="https://macdfree.github.io/2014/04/06/%E6%B0%B4%E8%B4%A8%E7%9B%91%E6%B5%8B(2)/"/>
    <id>https://macdfree.github.io/2014/04/06/水质监测(2)/</id>
    <published>2014-04-05T16:00:00.000Z</published>
    <updated>2016-09-25T07:03:24.926Z</updated>
    
    <content type="html"><![CDATA[<p>拖来拖去就拖到现在了，什么都没弄，趁现在临阵抱一下佛脚吧。</p>
<a id="more"></a>
<h4 id="1-CC2500模块"><a href="#1-CC2500模块" class="headerlink" title="1. CC2500模块"></a>1. CC2500模块</h4><p>用的是现成淘宝买的模块，从它的芯片手册中知道</p>
<blockquote>
<p>CC2500是一种低成本的2.4GHz收发器，集成了一个数据传输率可达500kbps的高度可配置的调制解调器，并为数据包处理、数据缓冲、突发数据传输、清晰信道评估、连接质量指示和电磁波激发提供广泛的硬件支持。</p>
</blockquote>
<p>虽然芯片手册说的好像很厉害的样子，但对我来说完全没感觉，手册后面各种专业术语也根本就是对牛弹琴，对我有用的我想就是这幅图了<br><img src="m3.png" alt="CC2500状态转换图"><br>上图描述了CC2500工作状态的转换过程，由此编写CC2500的驱动代码。具体的参考<a href="http://www.360doc.com/content/12/0712/13/9688385_223765865.shtml" target="_blank" rel="external">CC2500使用手记</a></p>
<p>普通节点的CC2500工作流程如下图<br><img src="m5.png" alt="普通节点CC2500工作流程"></p>
<p>另外，CC2500的工作电压为3.3V，与5V单片机电平不匹配，所以要么换成3.3V的单片机，要么加稳压模块将5V转换成3.3V。</p>
<h4 id="2-GPRS模块"><a href="#2-GPRS模块" class="headerlink" title="2. GPRS模块"></a>2. GPRS模块</h4><p>GPRS模块现在还没有仔细看，测试过直接和电脑通过串口发送AT指令控制GPRS模块，现在主要的问题是GPRS芯片的工作电压为4V（3.2-4.8）左右，而且需要有2A以上的电流供电能力。</p>
<p>####3. 电平适配<br>单片机的选择主要考虑它和外围模块的电平匹配，CC2500模块的工作电压为3.3V，GPRS模块的工作电压为3.2-4.8V，大致的如下图<br><img src="m4.png" alt="电平分配"></p>
<h4 id="4-数据库的设计"><a href="#4-数据库的设计" class="headerlink" title="4. 数据库的设计"></a>4. 数据库的设计</h4><table>
<thead>
<tr>
<th>列名</th>
<th>描述</th>
<th>数据类型</th>
<th>允许空值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>sensor_ID</td>
<td>节点ID</td>
<td>uniqueidentifier</td>
<td>NO</td>
<td>主键</td>
</tr>
<tr>
<td>PH</td>
<td>ph值</td>
<td>nvarchar(256)</td>
<td>NO</td>
<td>-</td>
</tr>
<tr>
<td>temperature</td>
<td>温度</td>
<td>nvarchar(256)</td>
<td>NO</td>
<td>-</td>
</tr>
<tr>
<td>dissolved_oxygen</td>
<td>溶解氧</td>
<td>nvarchar(256)</td>
<td>NO</td>
<td>-</td>
</tr>
<tr>
<td>update_time</td>
<td>更新时间</td>
<td>datetime</td>
<td>NO</td>
<td>-</td>
</tr>
</tbody>
</table>
<p>上表只是关于节点数据存放的表，一个数据采集节点某一时刻的数据作为一条记录，通过汇聚的GPRS模块发送至服务器，然后由socket程序负责接收处理数据并存入数据库。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;拖来拖去就拖到现在了，什么都没弄，趁现在临阵抱一下佛脚吧。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="CC2500" scheme="https://macdfree.github.io/tags/CC2500/"/>
    
  </entry>
  
  <entry>
    <title>php apache mysql配置</title>
    <link href="https://macdfree.github.io/2014/04/05/php-apache-mysql%E9%85%8D%E7%BD%AE/"/>
    <id>https://macdfree.github.io/2014/04/05/php-apache-mysql配置/</id>
    <published>2014-04-04T16:00:00.000Z</published>
    <updated>2016-09-25T07:07:13.953Z</updated>
    
    <content type="html"><![CDATA[<p>php apache mysql配置<br><a id="more"></a></p>
<p>httpd.conf:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">LoadModule php5_module &quot;F:/software/apm/php54/php5apache2_2.dll&quot;</div><div class="line">AddType application/x-httpd-php .php</div><div class="line">PHPIniDir &quot;F:/software/apm/php54&quot;</div><div class="line"># Virtual hosts</div><div class="line">Include conf/extra/httpd-vhosts.conf</div><div class="line">DocumentRoot &quot;F:/PhpProject/cars&quot;</div><div class="line">&lt;Directory &quot;F:/PhpProject/cars&quot;&gt;</div></pre></td></tr></table></figure>
<p>httpd-vhosts.conf:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;VirtualHost *:80&gt;</div><div class="line">    ServerAdmin webmaster@dummy-host.macd.com</div><div class="line">    DocumentRoot &quot;E:/PhpProject/cars&quot;</div><div class="line">    ServerName 127.0.0.1</div><div class="line">    #ServerAlias www.dummy-host.macd.com</div><div class="line">    ErrorLog &quot;logs/cars-error.log&quot;</div><div class="line">    CustomLog &quot;logs/cars-access.log&quot; common</div><div class="line">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure>
<p>php.ini:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">extension=php_mysql.dll</div><div class="line">extension=php_mysqli.dll</div><div class="line">extension_dir = &quot;F:/software/apm/php54/ext&quot;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php apache mysql配置&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="apache" scheme="https://macdfree.github.io/tags/apache/"/>
    
      <category term="PHP" scheme="https://macdfree.github.io/tags/PHP/"/>
    
      <category term="mysql" scheme="https://macdfree.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Python转码问题的解决方法</title>
    <link href="https://macdfree.github.io/2014/04/05/Python%E8%BD%AC%E7%A0%81%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://macdfree.github.io/2014/04/05/Python转码问题的解决方法/</id>
    <published>2014-04-04T16:00:00.000Z</published>
    <updated>2016-09-25T07:06:15.637Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.jb51.net/article/16104.htm" target="_blank" rel="external">参考</a></p>
<p>有时，若要将某个String对象s从gbk内码转换为UTF-8，可以如下操作<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">s.decode(<span class="string">'gbk'</span>).encode(<span class="string">'utf-8′)</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>可是，在实际应用中，我发现，这种办法经常会出现异常：</p>
<blockquote>
<p>UnicodeDecodeError: ‘gbk’ codec can’t decode bytes in position 30664-30665: illegal multibyte sequence</p>
</blockquote>
<p>这是因为遇到了非法字符——尤其是在某些用C/C++编写的程序中，全角空格往往有多种不同的实现方式，比如<code>\xa3\xa0</code>，或者<code>\xa4\x57</code>，这些字符，看起来都是全角空格，但它们并不是“合法”的全角空格（真正的全角空格是<code>\xa1\xa1</code>），因此在转码的过程中出现了异常。</p>
<p>这样的问题很让人头疼，因为只要字符串中出现了一个非法字符，整个字符串——有时候，就是整篇文章——就都无法转码。</p>
<p>解决办法：<br>s.decode(‘gbk’, ‘ignore’).encode(‘utf-8′)<br>因为decode的函数原型是decode([encoding], [errors=’strict’])，可以用第二个参数控制错误处理的策略，默认的参数就是strict，代表遇到非法字符时抛出异常；</p>
<ul>
<li>如果设置为ignore，则会忽略非法字符；</li>
<li>如果设置为replace，则会用?取代非法字符；</li>
<li>如果设置为xmlcharrefreplace，则使用XML的字符引用。</li>
</ul>
<p>python文档</p>
<blockquote>
<p>decode( [encoding[, errors]])<br>Decodes the string using the codec registered for encoding. encoding defaults to the default string encoding. errors may be given to set a different error handling scheme. The default is ‘strict’, meaning that encoding errors raise UnicodeError. Other possible values are ‘ignore’, ‘replace’ and any other name registered via codecs.register_error, see section 4.8.1.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.jb51.net/article/16104.htm&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有时，若要将某个String对象s从gbk内码转换为UTF-8，可以如下操作&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;s.decode(&lt;span class=&quot;string&quot;&gt;&#39;gbk&#39;&lt;/span&gt;).encode(&lt;span class=&quot;string&quot;&gt;&#39;utf-8′)&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="python" scheme="https://macdfree.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>关于51单片机的中断问题</title>
    <link href="https://macdfree.github.io/2014/03/27/%E5%85%B3%E4%BA%8E51%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98/"/>
    <id>https://macdfree.github.io/2014/03/27/关于51单片机的中断问题/</id>
    <published>2014-03-26T16:00:00.000Z</published>
    <updated>2016-09-25T07:02:50.099Z</updated>
    
    <content type="html"><![CDATA[<p>今天上无线传感器网络课的时候，老师问了一个他遇到的问题：用C语言编写中断程序时，<code>interrupt</code>后跟的数字写错了，但实际运行时却是正常的，他进一步试验发现只要这个数字比正确的数字大都是可以的，由此问我们其中的原因。</p>
<a id="more"></a>
<p>听到这个问题我首先想到了中断响应时，单片机所做的工作。其中关键的一步就是根据中断类型跳转到相应的中断向量，然后程序就从这个中断向量继续向下执行。而上述问题的答案也就是在此，为了便于说明，我将定时器0的中断程序改成<code>interrupt 1</code>-&gt;<code>interrupt 2</code>，编译后的汇编代码如图所示：</p>
<p><img src="m2.png" alt="汇编截图"></p>
<p>由图可知中断跳转语句<code>C:0x0013 0201EA LJMP timeI(C:01EA)</code>是放置在<code>0x0013</code>的地址上的，而这个地址正是中断号为2的中断向量，由此可知关键词<code>interrupt</code>的作用是在编译时根据编写的中断号在相应的中断向量中放置一条跳转指令，跳转至定义的函数入口。</p>
<p>下面开始分析当<code>interrupt num</code>中，<code>num</code>写错时的情况，当发生中断时，PC被指向相应的中断向量并由此开始向下执行。可能的错误情况有（假设程序中只有一个中断服务程序）：</p>
<ol>
<li><p><code>num</code>&lt;正确值</p>
<p>PC指向的地址大于放置跳转指令的地址，即跳转指令永远执行不到，所以永远进不了中断服务程序。</p>
</li>
<li><p><code>num</code>&gt;正确值</p>
<p>PC指向的地址小于放置跳转指令的地址，即程序可以执行到跳转指令，并进入中断服务程序，只是可能会比正确的慢几个机器周期。</p>
</li>
</ol>
<p>但是，这不是绝对的，有时中断服务程序较短时，编译器会将服务程序的相应指令直接放置在以中断向量开始的区域内，并覆盖掉没有用到的且中断号比它大的中断向量，这种情况下程序还是不会正常执行。</p>
<p>觉得写得还是不够明白，虽然自己心里已经明白其中的原因，但表达方面还是不行，估计是水平还不够。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天上无线传感器网络课的时候，老师问了一个他遇到的问题：用C语言编写中断程序时，&lt;code&gt;interrupt&lt;/code&gt;后跟的数字写错了，但实际运行时却是正常的，他进一步试验发现只要这个数字比正确的数字大都是可以的，由此问我们其中的原因。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="单片机" scheme="https://macdfree.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
      <category term="中断" scheme="https://macdfree.github.io/tags/%E4%B8%AD%E6%96%AD/"/>
    
      <category term="interrupt" scheme="https://macdfree.github.io/tags/interrupt/"/>
    
  </entry>
  
  <entry>
    <title>水质监测(1)</title>
    <link href="https://macdfree.github.io/2014/03/25/%E6%B0%B4%E8%B4%A8%E7%9B%91%E6%B5%8B(1)/"/>
    <id>https://macdfree.github.io/2014/03/25/水质监测(1)/</id>
    <published>2014-03-24T16:00:00.000Z</published>
    <updated>2016-09-25T07:03:18.607Z</updated>
    
    <content type="html"><![CDATA[<p>“水质监测”是我这学期的实习题目，我想通过一系列的文章记录整个的开发过程。这是第一篇，主要记录整体的结构设想和一些关键点。</p>
<a id="more"></a>
<p>首先是整体的框图</p>
<p><img src="m1.png" alt="整体框图"></p>
<p>图中主要包含三个部分，分别为普通节点、汇集节点和服务器。为简化起见，普通节点只画了一个，实际上可以是多个。每个普通节点需要实现的功能为：</p>
<ol>
<li>采集温度、PH值和溶解氧值；</li>
<li>将采集到的数据通过射频模块传输至汇聚节点。</li>
</ol>
<p>汇集节点负责接收各个普通节点传送过来的采集数据，并通过GPRS模块将数据发送至服务器。服务器端主要将接收到的数据存入数据库，同时通过Web访问的方式将数据以用户友好的方式呈现出来。</p>
<p>通过上述分析，整个系统的难点有以下几点：</p>
<ol>
<li><p>PH值和溶解氧传感器接口的转换</p>
<p>因为此类传感器多是BNC接口，要传输至单片机需要额外的电路转换。</p>
</li>
<li><p>GPRS通过TCP协议传输时数据包的设计</p>
<p>其实射频通信时的数据包设计也是要考虑的，要保证数据包的完整和准<br>确。</p>
</li>
<li><p>Web的设计</p>
<p>Web设计不仅要考虑数据如何组织查询，如何显示，对界面的设计也比较繁琐，因为上学期做过个小网站所以深有体会。</p>
</li>
</ol>
<p>以上只是前期需要解决的问题，这些问题不解决后面的根本无法继续，至于后期的则是自行设计电路板，代码整合和优化。这些都是以后的事，在此不再讨论。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“水质监测”是我这学期的实习题目，我想通过一系列的文章记录整个的开发过程。这是第一篇，主要记录整体的结构设想和一些关键点。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>用半天时间搭的博客</title>
    <link href="https://macdfree.github.io/2014/03/24/%E7%94%A8%E5%8D%8A%E5%A4%A9%E6%97%B6%E9%97%B4%E6%90%AD%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://macdfree.github.io/2014/03/24/用半天时间搭的博客/</id>
    <published>2014-03-23T16:00:00.000Z</published>
    <updated>2016-09-25T07:03:30.131Z</updated>
    
    <content type="html"><![CDATA[<p>今天没事做（其实准确地说是不想做事），无聊上网的时候偶然想到以前试过的用<strong>GitHub Pages</strong>搭建blog的方法，就顺着以前的进展做了下去。首先是看了<strong><a href="http://jekyllrb.com/docs/home/" target="_blank" rel="external">jekyllrb</a></strong>的文档，不得不说看英文文档真是头痛，幸好官网的字体风格还是蛮适合阅读的，否则我真是看不下去。大概看过文档后基本知道怎么用了。之后就开始写代码，先把大体的框架写完，然后考虑可以再加入点什么，不过可惜，到现在我都没办法为它加入一般博客应该有的功能，如分类、标签、评论、浏览次数等等。现在只有基本可以看的功能，唉，我太水了吧。从中午11：00弄到现在，觉得效率还是有点低，不过总算没有白费这假期的一下午。话说貌似我总是做点不相关的事情，老师让我熟悉MSP430，我却在这里弄blog，真是不务正业。。。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天没事做（其实准确地说是不想做事），无聊上网的时候偶然想到以前试过的用&lt;strong&gt;GitHub Pages&lt;/strong&gt;搭建blog的方法，就顺着以前的进展做了下去。首先是看了&lt;strong&gt;&lt;a href=&quot;http://jekyllrb.com/docs/ho
    
    </summary>
    
      <category term="note" scheme="https://macdfree.github.io/categories/note/"/>
    
    
      <category term="GitHub Pages" scheme="https://macdfree.github.io/tags/GitHub-Pages/"/>
    
      <category term="jekylleb" scheme="https://macdfree.github.io/tags/jekylleb/"/>
    
  </entry>
  
</feed>
